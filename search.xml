<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网络资源整理</title>
    <url>/2022/04/03/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="网络资源整理"><a href="#网络资源整理" class="headerlink" title="网络资源整理"></a>网络资源整理</h1><h1 id="IT博客"><a href="#IT博客" class="headerlink" title="IT博客"></a>IT博客</h1><table>
<thead>
<tr>
<th>博客</th>
<th>地址</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>阮一峰的网络日志</td>
<td><a href="http://www.ruanyifeng.com/blog/">http://www.ruanyifeng.com/blog/</a></td>
<td></td>
</tr>
<tr>
<td>廖雪峰的官方网站</td>
<td><a href="https://www.liaoxuefeng.com/">https://www.liaoxuefeng.com/</a></td>
<td>Mysql/Python/JAVA/JS/区块链/GIT</td>
</tr>
<tr>
<td>刘江的博客</td>
<td><a href="https://www.liujiangblog.com/blog/">https://www.liujiangblog.com/blog/</a></td>
<td>Python/Django3.1/Vue3/数据分析</td>
</tr>
<tr>
<td>网道</td>
<td><a href="https://wangdoc.com/javascript/">https://wangdoc.com/javascript/</a></td>
<td>HTML/JS/ES6/C/SHELL/SSH/WEB API</td>
</tr>
<tr>
<td>为什么这么设计</td>
<td><a href="https://draveness.me/">https://draveness.me/</a></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="知名软件"><a href="#知名软件" class="headerlink" title="知名软件"></a>知名软件</h1><table>
<thead>
<tr>
<th>软件</th>
<th>下载位置</th>
</tr>
</thead>
<tbody><tr>
<td>投屏软件scrcpy</td>
<td><a href="https://github.com/Genymobile/scrcpy/releases/download/v1.23/scrcpy-win64-v1.23.zip">https://github.com/Genymobile/scrcpy/releases/download/v1.23/scrcpy-win64-v1.23.zip</a></td>
</tr>
<tr>
<td>压缩软件7z</td>
<td><a href="https://www.7-zip.org/">https://www.7-zip.org/</a></td>
</tr>
<tr>
<td>安装卸载geek</td>
<td><a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a></td>
</tr>
<tr>
<td>everything</td>
<td><a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="PIP安装源"><a href="#PIP安装源" class="headerlink" title="PIP安装源"></a>PIP安装源</h1><table>
<thead>
<tr>
<th>源</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>清华</td>
<td><a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></td>
</tr>
<tr>
<td>豆瓣</td>
<td><a href="http://pypi.doubanio.com/simple/">http://pypi.doubanio.com/simple/</a></td>
</tr>
<tr>
<td>腾讯</td>
<td><a href="https://mirrors.cloud.tencent.com/pypi/simple/">https://mirrors.cloud.tencent.com/pypi/simple/</a></td>
</tr>
<tr>
<td>阿里云</td>
<td><a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li><p>使用方式：临时的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install selenium -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li>
<li><p>永久的，执行如下命令，以后敲命令自动找这个仓库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> <span class="keyword">global</span>.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

<ul>
<li><p>这样会生成一个pip.ini，WIN10大概位置是C:\Users\用户名\AppData\Roaming\pip\pip.ini</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h1 id="SELENIUM相关"><a href="#SELENIUM相关" class="headerlink" title="SELENIUM相关"></a>SELENIUM相关</h1><h2 id="驱动下载位置"><a href="#驱动下载位置" class="headerlink" title="驱动下载位置"></a>驱动下载位置</h2><table>
<thead>
<tr>
<th>驱动</th>
<th>位置</th>
</tr>
</thead>
<tbody><tr>
<td>chromedriver</td>
<td><a href="https://registry.npmmirror.com/binary.html?path=chromedriver">https://registry.npmmirror.com/binary.html?path=chromedriver</a></td>
</tr>
<tr>
<td>geckodriver</td>
<td><a href="https://registry.npmmirror.com/binary.html?path=geckodriver">https://registry.npmmirror.com/binary.html?path=geckodriver</a></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><table>
<thead>
<tr>
<th>地址</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.seleniumhq.org/selenium-ide/docs/en/api/commands/">https://www.seleniumhq.org/selenium-ide/docs/en/api/commands/</a></td>
<td>IDE相关命令</td>
</tr>
<tr>
<td><a href="https://w3c.github.io/webdriver/#get-title">https://w3c.github.io/webdriver/#get-title</a></td>
<td>WEBDRIVER官网</td>
</tr>
<tr>
<td><a href="https://chromedriver.chromium.org/home">https://chromedriver.chromium.org/home</a></td>
<td>CHROMEDRIVER官网</td>
</tr>
<tr>
<td><a href="https://pypi.org/project/selenium">https://pypi.org/project/selenium</a></td>
<td>SELENIUM的PYPI</td>
</tr>
<tr>
<td><a href="https://github.com/SeleniumHQ/selenium/blob/trunk/py/CHANGES">https://github.com/SeleniumHQ/selenium/blob/trunk/py/CHANGES</a></td>
<td>SELENIUM的changelog</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="PO"><a href="#PO" class="headerlink" title="PO"></a>PO</h2><table>
<thead>
<tr>
<th>地址</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://martinfowler.com/bliki/PageObject.html">https://martinfowler.com/bliki/PageObject.html</a></td>
<td>出身</td>
</tr>
<tr>
<td><a href="https://github.com/SeleniumHQ/selenium/wiki/PageObjects">https://github.com/SeleniumHQ/selenium/wiki/PageObjects</a></td>
<td>SELENIUM官网对PO的说明</td>
</tr>
<tr>
<td><a href="https://selenium-python.readthedocs.io/page-objects.html#">https://selenium-python.readthedocs.io/page-objects.html#</a></td>
<td>selenium托管的文档对PO的说明</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><table>
<thead>
<tr>
<th>说明</th>
<th>位置</th>
</tr>
</thead>
<tbody><tr>
<td>MDN关于HTTP协议详解</td>
<td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP">https://developer.mozilla.org/zh-CN/docs/Web/HTTP</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>待续</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Python小技巧</title>
    <url>/2022/03/31/Python%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="Python小技巧"><a href="#Python小技巧" class="headerlink" title="Python小技巧"></a>Python小技巧</h1><blockquote>
<p>参考文档： <a href="https://therenegadecoder.com/code/python-code-snippets-for-everyday-problems/#code-snippet-repository">https://therenegadecoder.com/code/python-code-snippets-for-everyday-problems/#code-snippet-repository</a></p>
<p>计划：先翻译上述文档；再把工作中遇到的逐步移植过来。</p>
</blockquote>
<h1 id="001：合并字典的多种方式"><a href="#001：合并字典的多种方式" class="headerlink" title="001：合并字典的多种方式"></a>001：合并字典的多种方式</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#原始的字典</span></span><br><span class="line">orig_dict = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wuxianfeng&quot;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;male&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#新的key</span></span><br><span class="line">new_dict = &#123;<span class="string">&#x27;country&#x27;</span>:<span class="string">&#x27;china&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#重复的key</span></span><br><span class="line">dupe_dict = &#123;<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;female&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并方式1</span></span><br><span class="line">orig_dict.update(new_dict)</span><br><span class="line"><span class="built_in">print</span>(orig_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并方式2 遍历2个字典   注意与方式1要分开测试，因为方式1已经改变了原始的字典，下面的是新的字典不影响</span></span><br><span class="line">merge_dict2 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> (orig_dict, new_dict):</span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> _.items():</span><br><span class="line">        merge_dict2[key] = value</span><br><span class="line"><span class="built_in">print</span>(merge_dict2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并方式3 字典推导式</span></span><br><span class="line">merge_dict3 = &#123;key: value <span class="keyword">for</span> d <span class="keyword">in</span> (orig_dict, new_dict) <span class="keyword">for</span> key, value <span class="keyword">in</span> d.items()&#125;</span><br><span class="line"><span class="built_in">print</span>(merge_dict3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并方式4  字典解包</span></span><br><span class="line"><span class="comment"># Dictionary unpacking (Python 3.5+)</span></span><br><span class="line">merge_dict4 = &#123;**orig_dict, **new_dict&#125;</span><br><span class="line"><span class="built_in">print</span>(merge_dict4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式5 联合字典</span></span><br><span class="line"><span class="comment"># # Dictionary union operator (Python 3.9+ maybe?)</span></span><br><span class="line">merge_dict5 = orig_dict | dupe_dict</span><br><span class="line">merge_dict6 = dupe_dict | orig_dict</span><br><span class="line"><span class="built_in">print</span>(merge_dict5)</span><br><span class="line"><span class="built_in">print</span>(merge_dict6)</span><br></pre></td></tr></table></figure>



<h1 id="002：-转置字典的多种方式"><a href="#002：-转置字典的多种方式" class="headerlink" title="002： 转置字典的多种方式"></a>002： 转置字典的多种方式</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ori_dict = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;wuxianfeng&#x27;</span>,<span class="string">&#x27;city&#x27;</span>:<span class="string">&#x27;suzhou&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 方法一：推导式</span></span><br><span class="line">reverse_dict2 = &#123;value:key <span class="keyword">for</span> key,value <span class="keyword">in</span> ori_dict.items()&#125;</span><br><span class="line"><span class="built_in">print</span>(reverse_dict2)</span><br><span class="line"><span class="comment"># 方法二：map映射 结合reversed转置</span></span><br><span class="line">reverse_dict1 = <span class="built_in">dict</span>(<span class="built_in">map</span>(<span class="built_in">reversed</span>,ori_dict.items()))</span><br><span class="line"><span class="built_in">print</span>(reverse_dict1)</span><br></pre></td></tr></table></figure>





<h1 id="003：输出在同一行"><a href="#003：输出在同一行" class="headerlink" title="003：输出在同一行"></a>003：输出在同一行</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello china&#x27;</span>)  <span class="comment">#这一行跟上一行在一起</span></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.stdout.write(<span class="string">&#x27;hello nanjing&#x27;</span>)</span><br><span class="line">sys.stdout.write(<span class="string">&#x27;hello jiangning&#x27;</span>)  <span class="comment">#这一行跟上一行在一起</span></span><br></pre></td></tr></table></figure>



<h1 id="004：代码运行时间"><a href="#004：代码运行时间" class="headerlink" title="004：代码运行时间"></a>004：代码运行时间</h1><ul>
<li><p><strong>方法一:timeit</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line">expr = <span class="string">&#x27;[(a, b) for a in (1, 3, 5) for b in (2, 4, 6)]&#x27;</span>  <span class="comment">#被测代码</span></span><br><span class="line"><span class="built_in">print</span>(timeit.timeit(expr,number=<span class="number">1000000</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(timeit.repeat(expr)))</span><br></pre></td></tr></table></figure></li>
<li><p>timeit.repeat()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">repeat</span>(<span class="params">stmt=<span class="string">&quot;pass&quot;</span>, setup=<span class="string">&quot;pass&quot;</span>, timer=default_timer,</span></span><br><span class="line"><span class="params">           repeat=default_repeat, number=default_number, <span class="built_in">globals</span>=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Convenience function to create Timer object and call repeat method.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Timer(stmt, setup, timer, <span class="built_in">globals</span>).repeat(repeat, number)</span><br><span class="line">default_number = <span class="number">1000000</span></span><br><span class="line">default_repeat = <span class="number">5</span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>方法二:cprofile</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -m cProfile -s cumulative  待执行的文件.py</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Ordered by: cumulative time</span><br><span class="line">  </span><br><span class="line">ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">     <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.099</span>    <span class="number">0.099</span> &#123;built-<span class="keyword">in</span> method builtins.<span class="built_in">exec</span>&#125;</span><br><span class="line">     <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.099</span>    <span class="number">0.099</span> 待执行的文件.py:<span class="number">6</span>(&lt;module&gt;)</span><br><span class="line">     <span class="number">2</span>    <span class="number">0.088</span>    <span class="number">0.044</span>    <span class="number">0.088</span>    <span class="number">0.044</span> &#123;built-<span class="keyword">in</span> method builtins.<span class="built_in">print</span>&#125;</span><br><span class="line">     <span class="number">1</span>    <span class="number">0.006</span>    <span class="number">0.006</span>    <span class="number">0.008</span>    <span class="number">0.008</span> 待执行的文件.py:<span class="number">11</span>(test2)</span><br><span class="line"> <span class="number">30000</span>    <span class="number">0.003</span>    <span class="number">0.000</span>    <span class="number">0.003</span>    <span class="number">0.000</span> &#123;method <span class="string">&#x27;append&#x27;</span> of <span class="string">&#x27;list&#x27;</span> objects&#125;</span><br><span class="line">     <span class="number">1</span>    <span class="number">0.001</span>    <span class="number">0.001</span>    <span class="number">0.002</span>    <span class="number">0.002</span> 待执行的文件.py:<span class="number">6</span>(test1)</span><br><span class="line">     <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">&#x27;disable&#x27;</span> of <span class="string">&#x27;_lsprof.Profiler&#x27;</span> objects&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<ul>
<li><strong>ncalls</strong>：表示函数调用的次数；</li>
<li><strong>tottime</strong>：表示指定函数的总的运行时间，除掉函数中调用子函数的运行时间；</li>
<li><strong>percall</strong>：（第一个percall）等于 tottime/ncalls；</li>
<li><strong>cumtime</strong>：表示该函数及其所有子函数的调用运行的时间，即函数开始调用到返回的时间；</li>
<li><strong>percall</strong>：（第二个percall）即函数运行一次的平均时间，等于 cumtime/ncalls；</li>
<li>**filename:lineno(function)**：每个函数调用的具体信息；</li>
<li>需要注意的是cProfile很难搞清楚函数内的每一行发生了什么，是针对整个函数来说的。</li>
</ul>
</li>
</ul>
<h1 id="005：python3-10以下版本实现switch-case"><a href="#005：python3-10以下版本实现switch-case" class="headerlink" title="005：python3.10以下版本实现switch-case"></a>005：python3.10以下版本实现switch-case</h1><ul>
<li><p>python3.10天然就支持了，不需要额外实现。</p>
</li>
<li><p>常规的处理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">choice  = <span class="built_in">input</span>(<span class="string">&#x27;choice:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;choose 1&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;choose 2&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;oops!&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>字典实现</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">choice_dict = &#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;choose 1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;2&#x27;</span>:<span class="string">&#x27;choose 2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">choice = <span class="built_in">input</span>(<span class="string">&#x27;choice: &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(choice_dict.get(choice,<span class="string">&#x27;oops!&#x27;</span>))</span><br></pre></td></tr></table></figure></li>
<li><p>如果要做很多事情，用函数封装一下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">choose_1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;choose 1&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choose_2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;choose 2&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choose_3</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;choose 3&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">choice_dict = &#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:choose_1,</span><br><span class="line">    <span class="string">&#x27;2&#x27;</span>:choose_2,</span><br><span class="line">    <span class="string">&#x27;3&#x27;</span>:choose_3</span><br><span class="line">&#125;</span><br><span class="line">choice = <span class="built_in">input</span>(<span class="string">&#x27;choice: &#x27;</span>)</span><br><span class="line">choice_dict.get(choice,<span class="string">&#x27;oops!&#x27;</span>)()</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>待续</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman内置变量</title>
    <url>/2022/04/03/Postman%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h1 id="Postman内置变量"><a href="#Postman内置变量" class="headerlink" title="Postman内置变量"></a>Postman内置变量</h1><blockquote>
<p><a href="https://learning.postman.com/docs/writing-scripts/script-references/variables-list/">https://learning.postman.com/docs/writing-scripts/script-references/variables-list/</a></p>
<p>我只是个搬运工，网上有的地方说只有3个?怎么可能呢。你说常用？那几个一点都不好用。</p>
</blockquote>
<ul>
<li><p>通过faker factory产生</p>
</li>
<li><p>像这么用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;&#123;$randomFirstName&#125;&#125;   <span class="comment">//这在MD中竟然显示不出来</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$guid</strong></td>
<td align="left">A <code>uuid-v4</code> style guid</td>
<td align="left"><code>&quot;611c2e81-2ccb-42d8-9ddc-2d0bfa65c1b4&quot;</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>&quot;3a721b7f-7dc9-4c45-9777-516942b98e0d&quot;</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>&quot;22eca807-006b-47df-9511-e92e37f5071a&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$timestamp</strong></td>
<td align="left">The current UNIX timestamp in seconds</td>
<td align="left"><code>1562757107</code>, <code>1562757108</code>, <code>1562757109</code></td>
</tr>
<tr>
<td align="left"><strong>$isoTimestamp</strong></td>
<td align="left">The current ISO timestamp at zero UTC</td>
<td align="left"><code>2020-06-09T21:10:36.177Z</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>2019-10-21T06:05:50.000Z</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>2019-07-29T18:29:00.000Z</code></td>
</tr>
<tr>
<td align="left"><strong>$randomUUID</strong></td>
<td align="left">A random 36-character UUID</td>
<td align="left"><code>&quot;6929bb52-3ab2-448a-9796-d6480ecad36b&quot;</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>&quot;53151b27-034f-45a0-9f0a-d7b6075b67d0&quot;</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>&quot;727131a2-2717-44ad-ab02-006587e947dc&quot;</code></td>
</tr>
</tbody></table>
<h3 id="Text-Numbers-and-Colors"><a href="#Text-Numbers-and-Colors" class="headerlink" title="Text, Numbers and Colors"></a>Text, Numbers and Colors</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomAlphaNumeric</strong></td>
<td align="left">A random alpha-numeric character</td>
<td align="left"><code>6</code>, <code>&quot;y&quot;</code>, <code>&quot;z&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBoolean</strong></td>
<td align="left">A random boolean value (true/false)</td>
<td align="left"><code>true</code>, <code>false</code>, <code>false</code>, <code>true</code></td>
</tr>
<tr>
<td align="left"><strong>$randomInt</strong></td>
<td align="left">A random integer between 0 and 1000</td>
<td align="left"><code>802</code>, <code>494</code>, <code>200</code></td>
</tr>
<tr>
<td align="left"><strong>$randomColor</strong></td>
<td align="left">A random color</td>
<td align="left"><code>&quot;red&quot;</code>, <code>&quot;fuchsia&quot;</code>, <code>&quot;grey&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$randomHexColor</strong></td>
<td align="left">A random hex value</td>
<td align="left"><code>&quot;#47594a&quot;</code>, <code>&quot;#431e48&quot;</code>, <code>&quot;#106f21&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$randomAbbreviation</strong></td>
<td align="left">A random abbreviation</td>
<td align="left"><code>SQL</code>, <code>PCI</code>, <code>JSON</code></td>
</tr>
</tbody></table>
<h3 id="Internet-and-IP-Addresses"><a href="#Internet-and-IP-Addresses" class="headerlink" title="Internet and IP Addresses"></a>Internet and IP Addresses</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomIP</strong></td>
<td align="left">A random IPv4 address</td>
<td align="left"><code>241.102.234.100</code>, <code>216.7.27.38</code></td>
</tr>
<tr>
<td align="left"><strong>$randomIPV6</strong></td>
<td align="left">A random IPv6 address</td>
<td align="left"><code>dbe2:7ae6:119b:c161:1560:6dda:3a9b:90a9</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>c482:23a4:ce4c:a668:7736:6cc5:b0b6:cc37</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>c791:18d1:fbba:87d8:d929:22aa:5a0a:ac3d</code></td>
</tr>
<tr>
<td align="left"><strong>$randomMACAddress</strong></td>
<td align="left">A random MAC address</td>
<td align="left"><code>33:d4:68:5f:b4:c7</code>, <code>1f:6e:db:3d:ed:fa</code></td>
</tr>
<tr>
<td align="left"><strong>$randomPassword</strong></td>
<td align="left">A random 15-character alpha-numeric password</td>
<td align="left"><code>t9iXe7COoDKv8k3</code>, <code>QAzNFQtvR9cg2rq</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLocale</strong></td>
<td align="left">A random two-letter language code (ISO 639-1)</td>
<td align="left"><code>&quot;ny&quot;</code>, <code>&quot;sr&quot;</code>, <code>&quot;si&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$randomUserAgent</strong></td>
<td align="left">A random user agent</td>
<td align="left"><code>Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.9.8; rv:15.6) Gecko/20100101 Firefox/15.6.6</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Opera/10.27 (Windows NT 5.3; U; AB Presto/2.9.177 Version/10.00)</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Mozilla/5.0 (Windows NT 6.2; rv:13.5) Gecko/20100101 Firefox/13.5.6</code></td>
</tr>
<tr>
<td align="left"><strong>$randomProtocol</strong></td>
<td align="left">A random internet protocol</td>
<td align="left"><code>&quot;http&quot;</code>, <code>&quot;https&quot;</code></td>
</tr>
<tr>
<td align="left"><strong>$randomSemver</strong></td>
<td align="left">A random semantic version number</td>
<td align="left"><code>7.0.5</code>, <code>2.5.8</code>, <code>6.4.9</code></td>
</tr>
</tbody></table>
<h3 id="Names"><a href="#Names" class="headerlink" title="Names"></a>Names</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomFirstName</strong></td>
<td align="left">A random first name</td>
<td align="left"><code>Ethan</code>, <code>Chandler</code>, <code>Megane</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLastName</strong></td>
<td align="left">A random last name</td>
<td align="left"><code>Schaden</code>, <code>Schneider</code>, <code>Willms</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFullName</strong></td>
<td align="left">A random first and last name</td>
<td align="left"><code>Connie Runolfsdottir</code>, <code>Sylvan Fay</code>, <code>Jonathon Kunze</code></td>
</tr>
<tr>
<td align="left"><strong>$randomNamePrefix</strong></td>
<td align="left">A random name prefix</td>
<td align="left"><code>Dr.</code>, <code>Ms.</code>, <code>Mr.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomNameSuffix</strong></td>
<td align="left">A random name suffix</td>
<td align="left"><code>I</code>, <code>MD</code>, <code>DDS</code></td>
</tr>
</tbody></table>
<h3 id="Profession"><a href="#Profession" class="headerlink" title="Profession"></a>Profession</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomJobArea</strong></td>
<td align="left">A random job area</td>
<td align="left"><code>Mobility</code>, <code>Intranet</code>, <code>Configuration</code></td>
</tr>
<tr>
<td align="left"><strong>$randomJobDescriptor</strong></td>
<td align="left">A random job descriptor</td>
<td align="left"><code>Forward</code>, <code>Corporate</code>, <code>Senior</code></td>
</tr>
<tr>
<td align="left"><strong>$randomJobTitle</strong></td>
<td align="left">A random job title</td>
<td align="left"><code>International Creative Liaison</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Product Factors Officer</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Future Interactions Executive</code></td>
</tr>
<tr>
<td align="left"><strong>$randomJobType</strong></td>
<td align="left">A random job type</td>
<td align="left"><code>Supervisor</code>, <code>Manager</code>, <code>Coordinator</code></td>
</tr>
</tbody></table>
<h3 id="Phone-Address-and-Location"><a href="#Phone-Address-and-Location" class="headerlink" title="Phone, Address and Location"></a>Phone, Address and Location</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomPhoneNumber</strong></td>
<td align="left">A random 10-digit phone number</td>
<td align="left"><code>700-008-5275</code>, <code>494-261-3424</code>, <code>662-302-7817</code></td>
</tr>
<tr>
<td align="left"><strong>$randomPhoneNumberExt</strong></td>
<td align="left">A random phone number with extension (12 digits)</td>
<td align="left"><code>27-199-983-3864</code>, <code>99-841-448-2775</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCity</strong></td>
<td align="left">A random city name</td>
<td align="left"><code>Spinkahaven</code>, <code>Korbinburgh</code>, <code>Lefflerport</code></td>
</tr>
<tr>
<td align="left"><strong>$randomStreetName</strong></td>
<td align="left">A random street name</td>
<td align="left"><code>Kuhic Island</code>, <code>General Street</code>, <code>Kendrick Springs</code></td>
</tr>
<tr>
<td align="left"><strong>$randomStreetAddress</strong></td>
<td align="left">A random street address</td>
<td align="left"><code>5742 Harvey Streets</code>, <code>47906 Wilmer Orchard</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCountry</strong></td>
<td align="left">A random country</td>
<td align="left"><code>Lao People&#39;s Democratic Republic</code>, <code>Kazakhstan</code>, <code>Austria</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCountryCode</strong></td>
<td align="left">A random 2-letter country code (ISO 3166-1 alpha-2)</td>
<td align="left"><code>CV</code>, <code>MD</code>, <code>TD</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLatitude</strong></td>
<td align="left">A random latitude coordinate</td>
<td align="left"><code>55.2099</code>, <code>27.3644</code>, <code>-84.7514</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLongitude</strong></td>
<td align="left">A random longitude coordinate</td>
<td align="left"><code>40.6609</code>, <code>171.7139</code>, <code>-159.9757</code></td>
</tr>
</tbody></table>
<h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomAvatarImage</strong></td>
<td align="left">A random avatar image</td>
<td align="left"><code>https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>https://s3.amazonaws.com/uifaces/faces/twitter/xadhix/128.jpg</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>https://s3.amazonaws.com/uifaces/faces/twitter/martip07/128.jpg</code></td>
</tr>
<tr>
<td align="left"><strong>$randomImageUrl</strong></td>
<td align="left">A URL for a random image</td>
<td align="left"><code>http://lorempixel.com/640/480</code></td>
</tr>
<tr>
<td align="left"><strong>$randomAbstractImage</strong></td>
<td align="left">A URL for a random abstract image</td>
<td align="left"><code>http://lorempixel.com/640/480/abstract</code></td>
</tr>
<tr>
<td align="left"><strong>$randomAnimalsImage</strong></td>
<td align="left">A URL for a random animal image</td>
<td align="left"><code>http://lorempixel.com/640/480/animals</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBusinessImage</strong></td>
<td align="left">A URL for a random stock business image</td>
<td align="left"><code>http://lorempixel.com/640/480/business</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCatsImage</strong></td>
<td align="left">A URL for a random cat image</td>
<td align="left"><code>http://lorempixel.com/640/480/cats</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCityImage</strong></td>
<td align="left">A URL for a random city image</td>
<td align="left"><code>http://lorempixel.com/640/480/city</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFoodImage</strong></td>
<td align="left">A URL for a random food image</td>
<td align="left"><code>http://lorempixel.com/640/480/food</code></td>
</tr>
<tr>
<td align="left"><strong>$randomNightlifeImage</strong></td>
<td align="left">A URL for a random nightlife image</td>
<td align="left"><code>http://lorempixel.com/640/480/nightlife</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFashionImage</strong></td>
<td align="left">A URL for a random fashion image</td>
<td align="left"><code>http://lorempixel.com/640/480/fashion</code></td>
</tr>
<tr>
<td align="left"><strong>$randomPeopleImage</strong></td>
<td align="left">A URL for a random image of a person</td>
<td align="left"><code>http://lorempixel.com/640/480/people</code></td>
</tr>
<tr>
<td align="left"><strong>$randomNatureImage</strong></td>
<td align="left">A URL for a random nature image</td>
<td align="left"><code>http://lorempixel.com/640/480/nature</code></td>
</tr>
<tr>
<td align="left"><strong>$randomSportsImage</strong></td>
<td align="left">A URL for a random sports image</td>
<td align="left"><code>http://lorempixel.com/640/480/sports</code></td>
</tr>
<tr>
<td align="left"><strong>$randomTransportImage</strong></td>
<td align="left">A URL for a random transportation image</td>
<td align="left"><code>http://lorempixel.com/640/480/transport</code></td>
</tr>
<tr>
<td align="left"><strong>$randomImageDataUri</strong></td>
<td align="left">A random image data URI</td>
<td align="left"><code>data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%20%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%20%20%3Ctext%20x%3D%220%22%20y%3D%2220%22%20font-size%3D%2220%22%20text-anchor%3D%22start%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%20%3C%2Fsvg%3E</code></td>
</tr>
</tbody></table>
<h3 id="Finance"><a href="#Finance" class="headerlink" title="Finance"></a>Finance</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomBankAccount</strong></td>
<td align="left">A random 8-digit bank account number</td>
<td align="left"><code>09454073</code>, <code>65653440</code>, <code>75728757</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBankAccountName</strong></td>
<td align="left">A random bank account name (e.g. savings account, checking account)</td>
<td align="left"><code>Home Loan Account</code>, <code>Checking Account</code>, <code>Auto Loan Account</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCreditCardMask</strong></td>
<td align="left">A random masked credit card number</td>
<td align="left"><code>3622</code>, <code>5815</code>, <code>6257</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBankAccountBic</strong></td>
<td align="left">A random BIC (Bank Identifier Code)</td>
<td align="left"><code>EZIAUGJ1</code>, <code>KXCUTVJ1</code>, <code>DIVIPLL1</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBankAccountIban</strong></td>
<td align="left">A random 15-31 character IBAN (International Bank Account Number)</td>
<td align="left"><code>MU20ZPUN3039684000618086155TKZ</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>BR7580569810060080800805730W2</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>XK241602002200395017</code></td>
</tr>
<tr>
<td align="left"><strong>$randomTransactionType</strong></td>
<td align="left">A random transaction type (e.g. invoice, payment, deposit)</td>
<td align="left"><code>invoice</code>, <code>payment</code>, <code>deposit</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCurrencyCode</strong></td>
<td align="left">A random 3-letter currency code (ISO-4217)</td>
<td align="left"><code>CDF</code>, <code>ZMK</code>, <code>GNF</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCurrencyName</strong></td>
<td align="left">A random currency name</td>
<td align="left"><code>CFP Franc</code>, <code>Cordoba Oro</code>, <code>Pound Sterling</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCurrencySymbol</strong></td>
<td align="left">A random currency symbol</td>
<td align="left"><code>$</code>, <code>£</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBitcoin</strong></td>
<td align="left">A random bitcoin address</td>
<td align="left"><code>3VB8JGT7Y4Z63U68KGGKDXMLLH5</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>1GY5TL5NEX3D1EA0TCWPLGVPQF5EAF</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>14IIEXV2AKZAHSCY2KNYP213VRLD</code></td>
</tr>
</tbody></table>
<h3 id="Business"><a href="#Business" class="headerlink" title="Business"></a>Business</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomCompanyName</strong></td>
<td align="left">A random company name</td>
<td align="left"><code>Johns - Kassulke</code>, <code>Grady LLC</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCompanySuffix</strong></td>
<td align="left">A random company suffix (e.g. Inc, LLC, Group)</td>
<td align="left"><code>Inc</code>, <code>LLC</code>, <code>Group</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBs</strong></td>
<td align="left">A random phrase of business speak</td>
<td align="left"><code>killer leverage schemas</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>bricks-and-clicks deploy markets</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>world-class unleash platforms</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBsAdjective</strong></td>
<td align="left">A random business speak adjective</td>
<td align="left"><code>viral</code>, <code>24/7</code>, <code>24/365</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBsBuzz</strong></td>
<td align="left">A random business speak buzzword</td>
<td align="left"><code>repurpose</code>, <code>harness</code>, <code>transition</code></td>
</tr>
<tr>
<td align="left"><strong>$randomBsNoun</strong></td>
<td align="left">A random business speak noun</td>
<td align="left"><code>e-services</code>, <code>markets</code>, <code>interfaces</code></td>
</tr>
</tbody></table>
<h3 id="Catchphrases"><a href="#Catchphrases" class="headerlink" title="Catchphrases"></a>Catchphrases</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomCatchPhrase</strong></td>
<td align="left">A random catchphrase</td>
<td align="left"><code>Future-proofed heuristic open architecture</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Quality-focused executive toolset</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Grass-roots real-time definition</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCatchPhraseAdjective</strong></td>
<td align="left">A random catchphrase adjective</td>
<td align="left"><code>Self-enabling</code>, <code>Business-focused</code>, <code>Down-sized</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCatchPhraseDescriptor</strong></td>
<td align="left">A random catchphrase descriptor</td>
<td align="left"><code>bandwidth-monitored</code>, <code>needs-based</code>, <code>homogeneous</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCatchPhraseNoun</strong></td>
<td align="left">Randomly generates a catchphrase noun</td>
<td align="left"><code>secured line</code>, <code>superstructure</code>,<code>installation</code></td>
</tr>
</tbody></table>
<h3 id="Databases"><a href="#Databases" class="headerlink" title="Databases"></a>Databases</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomDatabaseColumn</strong></td>
<td align="left">A random database column name</td>
<td align="left"><code>updatedAt</code>, <code>token</code>, <code>group</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDatabaseType</strong></td>
<td align="left">A random database type</td>
<td align="left"><code>tinyint</code>, <code>text</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDatabaseCollation</strong></td>
<td align="left">A random database collation</td>
<td align="left"><code>cp1250_bin</code>, <code>utf8_general_ci</code>, <code>cp1250_general_ci</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDatabaseEngine</strong></td>
<td align="left">A random database engine</td>
<td align="left"><code>MyISAM</code>, <code>InnoDB</code>, <code>Memory</code></td>
</tr>
</tbody></table>
<h3 id="Dates"><a href="#Dates" class="headerlink" title="Dates"></a>Dates</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomDateFuture</strong></td>
<td align="left">A random future datetime</td>
<td align="left"><code>Tue Mar 17 2020 13:11:50 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Fri Sep 20 2019 23:51:18 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Thu Nov 07 2019 19:20:06 GMT+0530 (India Standard Time)</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDatePast</strong></td>
<td align="left">A random past datetime</td>
<td align="left"><code>Sat Mar 02 2019 09:09:26 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Sat Feb 02 2019 00:12:17 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Thu Jun 13 2019 03:08:43 GMT+0530 (India Standard Time)</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDateRecent</strong></td>
<td align="left">A random recent datetime</td>
<td align="left"><code>Tue Jul 09 2019 23:12:37 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Wed Jul 10 2019 15:27:11 GMT+0530 (India Standard Time)</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Wed Jul 10 2019 01:28:31 GMT+0530 (India Standard Time)</code></td>
</tr>
<tr>
<td align="left"><strong>$randomWeekday</strong></td>
<td align="left">A random weekday</td>
<td align="left"><code>Thursday</code>, <code>Friday</code>, <code>Monday</code></td>
</tr>
<tr>
<td align="left"><strong>$randomMonth</strong></td>
<td align="left">A random month</td>
<td align="left"><code>February</code>, <code>May</code>, <code>January</code></td>
</tr>
</tbody></table>
<h3 id="Domains-Emails-and-Usernames"><a href="#Domains-Emails-and-Usernames" class="headerlink" title="Domains, Emails and Usernames"></a>Domains, Emails and Usernames</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomDomainName</strong></td>
<td align="left">A random domain name</td>
<td align="left"><code>gracie.biz</code>, <code>armando.biz</code>, <code>trevor.info</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDomainSuffix</strong></td>
<td align="left">A random domain suffix</td>
<td align="left"><code>org</code>, <code>net</code>, <code>com</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDomainWord</strong></td>
<td align="left">A random unqualified domain name</td>
<td align="left"><code>gwen</code>, <code>jaden</code>, <code>donnell</code></td>
</tr>
<tr>
<td align="left"><strong>$randomEmail</strong></td>
<td align="left">A random email address</td>
<td align="left"><code>Pablo62@gmail.com</code>, <code>Ruthe42@hotmail.com</code>, <code>Iva.Kovacek61@hotmail.com</code></td>
</tr>
<tr>
<td align="left"><strong>$randomExampleEmail</strong></td>
<td align="left">A random email address from an “example” domain</td>
<td align="left"><code>Talon28@example.com</code>, <code>Quinten_Kerluke45@example.net</code>, <code>Casey81@example.net</code></td>
</tr>
<tr>
<td align="left"><strong>$randomUserName</strong></td>
<td align="left">A random username</td>
<td align="left"><code>Jarrell.Gutkowski</code>, <code>Lottie.Smitham24</code>, <code>Alia99</code></td>
</tr>
<tr>
<td align="left"><strong>$randomUrl</strong></td>
<td align="left">A random URL</td>
<td align="left"><code>https://anais.net</code>, <code>https://tristin.net</code>, <code>http://jakob.name</code></td>
</tr>
</tbody></table>
<h3 id="Files-and-Directories"><a href="#Files-and-Directories" class="headerlink" title="Files and Directories"></a>Files and Directories</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomFileName</strong></td>
<td align="left">A random file name (includes uncommon extensions)</td>
<td align="left"><code>neural_sri_lanka_rupee_gloves.gdoc</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>plastic_awesome_garden.tif</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>incredible_ivory_agent.lzh</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFileType</strong></td>
<td align="left">A random file type (includes uncommon file types)</td>
<td align="left"><code>model</code>, <code>application</code>, <code>video</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFileExt</strong></td>
<td align="left">A random file extension (includes uncommon extensions)</td>
<td align="left"><code>war</code>, <code>book</code>, <code>fsc</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCommonFileName</strong></td>
<td align="left">A random file name</td>
<td align="left"><code>well_modulated.mpg4</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>rustic_plastic_tuna.gif</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>checking_account_end_to_end_robust.wav</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCommonFileType</strong></td>
<td align="left">A random, common file type</td>
<td align="left"><code>application</code>, <code>audio</code></td>
</tr>
<tr>
<td align="left"><strong>$randomCommonFileExt</strong></td>
<td align="left">A random, common file extension</td>
<td align="left"><code>m2v</code>, <code>wav</code>, <code>png</code></td>
</tr>
<tr>
<td align="left"><strong>$randomFilePath</strong></td>
<td align="left">A random file path</td>
<td align="left"><code>/home/programming_chicken.cpio</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>/usr/obj/fresh_bandwidth_monitored_beauty.onetoc</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>/dev/css_rustic.pm</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDirectoryPath</strong></td>
<td align="left">A random directory path</td>
<td align="left"><code>/usr/bin</code>, <code>/root</code>, <code>/usr/local/bin</code></td>
</tr>
<tr>
<td align="left"><strong>$randomMimeType</strong></td>
<td align="left">A random MIME type</td>
<td align="left"><code>audio/vnd.vmx.cvsd</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>application/vnd.groove-identity-message</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>application/vnd.oasis.opendocument.graphics-template</code></td>
</tr>
</tbody></table>
<h3 id="Stores"><a href="#Stores" class="headerlink" title="Stores"></a>Stores</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomPrice</strong></td>
<td align="left">A random price between 0.00 and 1000.00</td>
<td align="left"><code>531.55</code>, <code>488.76</code>, <code>511.56</code></td>
</tr>
<tr>
<td align="left"><strong>$randomProduct</strong></td>
<td align="left">A random product</td>
<td align="left"><code>Towels</code>, <code>Pizza</code>, <code>Pants</code></td>
</tr>
<tr>
<td align="left"><strong>$randomProductAdjective</strong></td>
<td align="left">A random product adjective</td>
<td align="left"><code>Unbranded</code>, <code>Incredible</code>, <code>Tasty</code></td>
</tr>
<tr>
<td align="left"><strong>$randomProductMaterial</strong></td>
<td align="left">A random product material</td>
<td align="left"><code>Steel</code>, <code>Plastic</code>, <code>Frozen</code></td>
</tr>
<tr>
<td align="left"><strong>$randomProductName</strong></td>
<td align="left">A random product name</td>
<td align="left"><code>Handmade Concrete Tuna</code>, <code>Refined Rubber Hat</code></td>
</tr>
<tr>
<td align="left"><strong>$randomDepartment</strong></td>
<td align="left">A random commerce category</td>
<td align="left"><code>Tools</code>, <code>Movies</code>, <code>Electronics</code></td>
</tr>
</tbody></table>
<h3 id="Grammar"><a href="#Grammar" class="headerlink" title="Grammar"></a>Grammar</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomNoun</strong></td>
<td align="left">A random noun</td>
<td align="left"><code>matrix</code>, <code>bus</code>, <code>bandwidth</code></td>
</tr>
<tr>
<td align="left"><strong>$randomVerb</strong></td>
<td align="left">A random verb</td>
<td align="left"><code>parse</code>, <code>quantify</code>, <code>navigate</code></td>
</tr>
<tr>
<td align="left"><strong>$randomIngverb</strong></td>
<td align="left">A random verb ending in “-ing”</td>
<td align="left"><code>synthesizing</code>, <code>navigating</code>, <code>backing up</code></td>
</tr>
<tr>
<td align="left"><strong>$randomAdjective</strong></td>
<td align="left">A random adjective</td>
<td align="left"><code>auxiliary</code>, <code>multi-byte</code>, <code>back-end</code></td>
</tr>
<tr>
<td align="left"><strong>$randomWord</strong></td>
<td align="left">A random word</td>
<td align="left"><code>withdrawal</code>, <code>infrastructures</code>, <code>IB</code></td>
</tr>
<tr>
<td align="left"><strong>$randomWords</strong></td>
<td align="left">Some random words</td>
<td align="left"><code>Samoa Synergistic sticky copying Grocery</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Corporate Springs</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Christmas Island Ghana Quality</code></td>
</tr>
<tr>
<td align="left"><strong>$randomPhrase</strong></td>
<td align="left">A random phrase</td>
<td align="left"><code>You can&#39;t program the monitor without navigating the mobile XML program!</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>overriding the capacitor won&#39;t do anything, we need to compress the optical SMS transmitter!</code>,</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>I&#39;ll generate the virtual AI program, that should microchip the RAM monitor!</code></td>
</tr>
</tbody></table>
<h3 id="Lorem-Ipsum"><a href="#Lorem-Ipsum" class="headerlink" title="Lorem Ipsum"></a>Lorem Ipsum</h3><table>
<thead>
<tr>
<th align="left"><strong>Variable Name</strong></th>
<th align="left"><strong>Description</strong></th>
<th align="left"><strong>Examples</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>$randomLoremWord</strong></td>
<td align="left">A random word of lorem ipsum text</td>
<td align="left"><code>est</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremWords</strong></td>
<td align="left">Some random words of lorem ipsum text</td>
<td align="left"><code>vel repellat nobis</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremSentence</strong></td>
<td align="left">A random sentence of lorem ipsum text</td>
<td align="left"><code>Molestias consequuntur nisi non quod.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremSentences</strong></td>
<td align="left">A random 2-6 sentences of lorem ipsum text</td>
<td align="left"><code>Et sint voluptas similique iure amet perspiciatis vero sequi atque. Ut porro sit et hic. Neque aspernatur vitae fugiat ut dolore et veritatis. Ab iusto ex delectus animi. Voluptates nisi iusto. Impedit quod quae voluptate qui.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremParagraph</strong></td>
<td align="left">A random paragraph of lorem ipsum text</td>
<td align="left"><code>Ab aliquid odio iste quo voluptas voluptatem dignissimos velit. Recusandae facilis qui commodi ea magnam enim nostrum quia quis. Nihil est suscipit assumenda ut voluptatem sed. Esse ab voluptas odit qui molestiae. Rem est nesciunt est quis ipsam expedita consequuntur.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremParagraphs</strong></td>
<td align="left">3 random paragraphs of lorem ipsum text</td>
<td align="left"><code>Voluptatem rem magnam aliquam ab id aut quaerat. Placeat provident possimus voluptatibus dicta velit non aut quasi. Mollitia et aliquam expedita sunt dolores nam consequuntur. Nam dolorum delectus ipsam repudiandae et ipsam ut voluptatum totam. Nobis labore labore recusandae ipsam quo.</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Voluptatem occaecati omnis debitis eum libero. Veniam et cum unde. Nisi facere repudiandae error aperiam expedita optio quae consequatur qui. Vel ut sit aliquid omnis. Est placeat ducimus. Libero voluptatem eius occaecati ad sint voluptatibus laborum provident iure.</code></td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"><code>Autem est sequi ut tenetur omnis enim. Fuga nisi dolor expedita. Ea dolore ut et a nostrum quae ut reprehenderit iste. Numquam optio magnam omnis architecto non. Est cumque laboriosam quibusdam eos voluptatibus velit omnis. Voluptatem officiis nulla omnis ratione excepturi.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremText</strong></td>
<td align="left">A random amount of lorem ipsum text</td>
<td align="left"><code>Quisquam asperiores exercitationem ut ipsum. Aut eius nesciunt. Et reiciendis aut alias eaque. Nihil amet laboriosam pariatur eligendi. Sunt ullam ut sint natus ducimus. Voluptas harum aspernatur soluta rem nam.</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremSlug</strong></td>
<td align="left">A random lorem ipsum URL slug</td>
<td align="left"><code>eos-aperiam-accusamus</code>, <code>beatae-id-molestiae</code>, <code>qui-est-repellat</code></td>
</tr>
<tr>
<td align="left"><strong>$randomLoremLines</strong></td>
<td align="left">1-5 random lines of lorem ipsum</td>
<td align="left"><code>Ducimus in ut mollitia.\nA itaque non.\nHarum temporibus nihil voluptas.\nIste in sed et nesciunt in quaerat sed.</code></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>postman</category>
      </categories>
      <tags>
        <tag>postman</tag>
        <tag>api</tag>
        <tag>完结</tag>
      </tags>
  </entry>
  <entry>
    <title>Python小程序_MD5</title>
    <url>/2022/04/03/Python%E5%B0%8F%E7%A8%8B%E5%BA%8FMD5/</url>
    <content><![CDATA[<h1 id="MD5不是加密"><a href="#MD5不是加密" class="headerlink" title="MD5不是加密"></a>MD5不是加密</h1><blockquote>
<p><a href="https://draveness.me/whys-the-design-password-with-md5/">https://draveness.me/whys-the-design-password-with-md5/</a>   参考为什么这么设计</p>
</blockquote>
<ul>
<li><p><strong>Message-Digest Algorithm 5</strong>：信息摘要算法</p>
</li>
<li><p>MD5 并不是一种加密算法，我们也可以叫它哈希函数</p>
</li>
<li><p>世界上最常见的20个密码，类似建立一个彩虹表进行碰撞，以达到<em>解密</em>的效果。</p>
<ul>
<li><a href="https://md5.hwcha.com/">https://md5.hwcha.com/</a></li>
<li><a href="https://www.sojson.com/md5/">https://www.sojson.com/md5/</a></li>
</ul>
<table>
<thead>
<tr>
<th>RANK</th>
<th>2021</th>
<th>MD5值(32位小写)</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>123456</td>
<td>e10adc3949ba59abbe56e057f20f883e</td>
</tr>
<tr>
<td>2</td>
<td>123456789</td>
<td>25f9e794323b453885f5181f1b624d0b</td>
</tr>
<tr>
<td>3</td>
<td>12345</td>
<td>827ccb0eea8a706c4c34a16891f84e7b</td>
</tr>
<tr>
<td>4</td>
<td>qwerty</td>
<td>d8578edf8458ce06fbc5bb76a58c5ca4</td>
</tr>
<tr>
<td>5</td>
<td>password</td>
<td>5f4dcc3b5aa765d61d8327deb882cf99</td>
</tr>
<tr>
<td>6</td>
<td>12345678</td>
<td>25d55ad283aa400af464c76d713c07ad</td>
</tr>
<tr>
<td>7</td>
<td>111111</td>
<td>96e79218965eb72c92a549dd5a330112</td>
</tr>
<tr>
<td>8</td>
<td>123123</td>
<td>4297f44b13955235245b2497399d7a93</td>
</tr>
<tr>
<td>9</td>
<td>1234567890</td>
<td>e807f1fcf82d132f9bb018ca6738a19f</td>
</tr>
<tr>
<td>10</td>
<td>1234567</td>
<td>fcea920f7412b5da7be0cf42b8c93759</td>
</tr>
<tr>
<td>11</td>
<td>qwerty123</td>
<td>3fc0a7acf087f549ac2b266baf94b8b1</td>
</tr>
<tr>
<td>12</td>
<td>000000</td>
<td>670b14728ad9902aecba32e22fa4f6bd</td>
</tr>
<tr>
<td>13</td>
<td>1q2w3e</td>
<td>3fde6bb0541387e4ebdadf7c2ff31123</td>
</tr>
<tr>
<td>14</td>
<td>aa12345678</td>
<td>d4f2a60315eef2b600cf0240ac0c37ad</td>
</tr>
<tr>
<td>15</td>
<td>abc123</td>
<td>e99a18c428cb38d5f260853678922e03</td>
</tr>
<tr>
<td>16</td>
<td>password1</td>
<td>7c6a180b36896a0a8c02787eeafb0e4c</td>
</tr>
<tr>
<td>17</td>
<td>1234</td>
<td>81dc9bdb52d04dc20036dbd8313ed055</td>
</tr>
<tr>
<td>18</td>
<td>qwertyuiop</td>
<td>6eea9b7ef19179a06954edd0f6c05ceb</td>
</tr>
<tr>
<td>19</td>
<td>123321</td>
<td>c8837b23ff8aaa8a2dde915473ce0991</td>
</tr>
<tr>
<td>20</td>
<td>password123</td>
<td>482c811da5d5b4bc6d497ffa98491e38</td>
</tr>
</tbody></table>
</li>
<li><p>为什么说MD5不是加密呢？</p>
<ul>
<li>数据源是无穷尽的，而 MD5密文是有限的。所以不存在MD5解密。</li>
<li>MD5 哈希的信息无法被还原，只依靠 MD5 是无法完成加密的。</li>
</ul>
</li>
<li><p>哈希加盐salt</p>
<ul>
<li>在原始字符串的基础上增加一个字符串，得到一个新的”密码”。</li>
<li>/etc/passwd早期就是这么存储密码的</li>
</ul>
</li>
<li><p>密码的破解（哈希碰撞）</p>
<ul>
<li>攻击者其实不需要知道用户的密码是什么，他只需要找到一个值 <code>value</code>，这个值加盐后的哈希与密码加盐后的哈希完全一致就能登录用户的账号</li>
<li>可以了解下hashcat（github搜）</li>
</ul>
</li>
</ul>
<h1 id="Python中的MD5”加密”"><a href="#Python中的MD5”加密”" class="headerlink" title="Python中的MD5”加密”"></a>Python中的MD5”加密”</h1><ul>
<li><p>加密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">ori_pwd = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">byte_ori_pwd = ori_pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment">#bytes对象</span></span><br><span class="line"><span class="built_in">print</span>(hashlib.md5(byte_ori_pwd).hexdigest())</span><br><span class="line"><span class="comment">#e10adc3949ba59abbe56e057f20f883e  都是这个</span></span><br><span class="line"><span class="built_in">print</span>(hashlib.md5(<span class="string">b&#x27;123456&#x27;</span>).hexdigest())</span><br></pre></td></tr></table></figure></li>
<li><p>得到的是32位小写，如果要32位大写、16位大小写，那就简单处理下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">ori_pwd = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">byte_ori_pwd = ori_pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;32位小写: &#x27;</span>,hashlib.md5(byte_ori_pwd).hexdigest())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;32位大写: &#x27;</span>,hashlib.md5(byte_ori_pwd).hexdigest().upper())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;16位小写: &#x27;</span>,hashlib.md5(byte_ori_pwd).hexdigest()[<span class="number">8</span>:-<span class="number">8</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;16位大写: &#x27;</span>,hashlib.md5(byte_ori_pwd).hexdigest()[<span class="number">8</span>:-<span class="number">8</span>].upper())</span><br></pre></td></tr></table></figure></li>
<li><p>加盐</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_md5</span>(<span class="params">ori_str:<span class="built_in">str</span>,salt:<span class="built_in">str</span>=<span class="string">&#x27;&#x27;</span>,mode:<span class="built_in">str</span>=<span class="string">&#x27;1&#x27;</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取字符串的MD加密后的信息</span></span><br><span class="line"><span class="string">    :param ori_str: 原始字符串</span></span><br><span class="line"><span class="string">    :param salt: 盐值</span></span><br><span class="line"><span class="string">    :param mode: 1=32小  2=32大 3=16小 4=16大</span></span><br><span class="line"><span class="string">    :return: MD5后的字符串</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    md5_password = hashlib.md5((ori_str+salt).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> md5_password</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> md5_password.upper()</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> md5_password[<span class="number">8</span>:-<span class="number">8</span>]</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> md5_password[<span class="number">8</span>:-<span class="number">8</span>].upper()</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">f&#x27;unsupport mode <span class="subst">&#123;mode&#125;</span>,only support 1,2,3,4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不加盐:&#x27;</span>,get_md5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;加盐:&#x27;</span>,get_md5(<span class="string">&#x27;123456&#x27;</span>,salt=<span class="string">&#x27;nanjing&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不加盐:&#x27;</span>,get_md5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不加盐16位小写:&#x27;</span>,get_md5(<span class="string">&#x27;123456&#x27;</span>,salt=<span class="string">&#x27;nanjing&#x27;</span>,mode=<span class="string">&#x27;3&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不加盐16位小写:&#x27;</span>,get_md5(<span class="string">&#x27;123456&#x27;</span>,salt=<span class="string">&#x27;nanjing&#x27;</span>,mode=<span class="string">&#x27;5&#x27;</span>))</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>完结</tag>
        <tag>python</tag>
        <tag>MD5</tag>
      </tags>
  </entry>
  <entry>
    <title>Python标准库_pathlib及实例操作</title>
    <url>/2022/04/02/Python%E6%A0%87%E5%87%86%E5%BA%93pathlib/</url>
    <content><![CDATA[<h1 id="Python标准库pathlib及实例操作"><a href="#Python标准库pathlib及实例操作" class="headerlink" title="Python标准库pathlib及实例操作"></a>Python标准库pathlib及实例操作</h1><blockquote>
<p><a href="https://docs.python.org/zh-cn/3.9/library/pathlib.html">https://docs.python.org/zh-cn/3.9/library/pathlib.html</a>  官网</p>
<p>讲的比较好的文章  <a href="https://zhuanlan.zhihu.com/p/139783331">https://zhuanlan.zhihu.com/p/139783331</a></p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul>
<li>该模块提供表示文件系统路径的类，其语义适用于不同的操作系统</li>
</ul>
<h2 id="优点（对比os-path"><a href="#优点（对比os-path" class="headerlink" title="优点（对比os.path)"></a>优点（对比os.path)</h2><ul>
<li><p>老的路径操作函数管理比较混乱，有的是导入 os, 有的又是在 os.path 当中，而新的用法统一可以用 pathlib 管理。</p>
</li>
<li><p>老用法在处理不同操作系统 win，mac 以及 linux 之间很吃力。换了操作系统常常要改代码，还经常需要进行一些额外操作。</p>
</li>
<li><p>老用法主要是函数形式，返回的数据类型通常是字符串。但是路径和字符串并不等价，所以在使用 os 操作路径的时候常常还要引入其他类库协助操作。新用法是面向对象，处理起来更灵活方便。</p>
</li>
<li><p>pathlib 简化了很多操作，用起来更轻松</p>
</li>
<li></li>
</ul>
<p><img src="https://s2.loli.net/2022/04/02/UOoHQdw2WyRLpKM.jpg" alt="v2-046244f5fa0fad6736ee6ffb205cd169_720w.jpg"></p>
<h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><h2 id="获取文件路径"><a href="#获取文件路径" class="headerlink" title="获取文件路径"></a>获取文件路径</h2><ul>
<li><p>语法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Path(__file__)   <span class="comment">#__file__是当前文件的绝对路径</span></span><br><span class="line"></span><br><span class="line">Path(__file__).parent  <span class="comment">#所在目录</span></span><br><span class="line">Path(__file__).parent.parent  <span class="comment">#所在目录的父目录</span></span><br><span class="line"></span><br><span class="line">Path(文件的相对路径)  </span><br><span class="line">Path(__file__).resolve()  <span class="comment">#仍然可以得到绝对路径</span></span><br><span class="line"></span><br><span class="line">Path(__file__).parent / <span class="string">&#x27;filename&#x27;</span>  <span class="comment">#目录拼接文件名 用/</span></span><br></pre></td></tr></table></figure></li>
<li><p>示例1</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="built_in">print</span>(Path.cwd())   <span class="comment">#你当前py文件的所在目录，类似于pwd</span></span><br><span class="line"><span class="built_in">print</span>(Path.home())  <span class="comment">#你当前用户的家目录（windows比如C:\Users\用户名）</span></span><br></pre></td></tr></table></figure></li>
<li><p>示例2</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># demo_pathlib.py</span></span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">file_abs_path = Path(__file__)  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;对象类型是: &#x27;</span>,<span class="built_in">type</span>(file_abs_path))  <span class="comment">#pathlib.WindowsPath</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件的绝对路径:&#x27;</span>,file_abs_path)</span><br><span class="line">file_relative_path = Path(<span class="string">&#x27;demo_pathlib.py&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件的相对路径:&#x27;</span>,file_relative_path)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件的绝对路径(另外一种写法):&#x27;</span>,file_relative_path.resolve())</span><br><span class="line"></span><br><span class="line">parent_dir  = Path(__file__).parent  <span class="comment">#还可以继续.parent，相当于cd ..和cd ../..</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件的父目录:&#x27;</span>,parent_dir)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;路径拼接用/(忽略操作系统差异): &#x27;</span>,parent_dir / file_relative_path) <span class="comment">#</span></span><br></pre></td></tr></table></figure></li>
<li><p>注意</p>
<ul>
<li>不管字符串使用的是正斜杠 <code>/</code> 还是反斜杠 <code>\</code>， 在 windows 系统里，得到的路径都是反斜杠<code>\</code>, pathlib 会根据操作系统智能处理</li>
</ul>
</li>
</ul>
<h2 id="获取路径组成部分"><a href="#获取路径组成部分" class="headerlink" title="获取路径组成部分"></a>获取路径组成部分</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line">saolei_apk = Path(r&#x27;d:\com.kejia.mine.apk&#x27;)</span><br><span class="line">print(saolei_apk.name)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td>文件名，包含后缀名，如果是目录则获取目录名</td>
</tr>
<tr>
<td>stem</td>
<td>文件名，不包含后缀。</td>
</tr>
<tr>
<td>suffix</td>
<td>后缀，比如 <code>.txt</code>, <code>.png</code>。</td>
</tr>
<tr>
<td>parent</td>
<td>父级目录，相当于 <code>cd ..</code></td>
</tr>
<tr>
<td>anchor</td>
<td>锚，目录前面的部分 <code>C:\</code> 或者 <code>/</code>。</td>
</tr>
</tbody></table>
<ul>
<li><p>多级目录</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">saolei_apk = Path(<span class="string">r&#x27;D:\software\aDrive\locales\am.pak&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> parent <span class="keyword">in</span> saolei_apk.parents:</span><br><span class="line">    <span class="built_in">print</span>(parent)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\software\aDrive\locales</span><br><span class="line">D:\software\aDrive</span><br><span class="line">D:\software</span><br><span class="line">D:\</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如果是os模块，要获取其父目录用的是os.path.dirname(),多级目录的话就麻烦，对比一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os_saolei_apk_dir  = os.path.dirname(<span class="string">r&#x27;D:\software\aDrive\locales\am.pak&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(os_saolei_apk_dir)</span><br><span class="line">os_saolei_apk_parent_dir = os.path.dirname(os.path.dirname(<span class="string">r&#x27;D:\software\aDrive\locales\am.pak&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(os_saolei_apk_parent_dir)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">pathlib_saolei_apk = Path(<span class="string">r&#x27;D:\software\aDrive\locales\am.pak&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(pathlib_saolei_apk.parent)</span><br><span class="line"><span class="built_in">print</span>(pathlib_saolei_apk.parent.parent)  <span class="comment">#就相当于cd..多次</span></span><br><span class="line"><span class="built_in">print</span>(pathlib_saolei_apk.parents[<span class="number">1</span>])  <span class="comment">#你还可以用parents，注意0是第一层所在目录，1是父目录，2是爷目录....</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="获取文件属性"><a href="#获取文件属性" class="headerlink" title="获取文件属性"></a>获取文件属性</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">saolei_apk = Path(<span class="string">r&#x27;d:\com.kejia.mine.apk&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(saolei_apk.stat())</span><br><span class="line"><span class="comment">#os.stat_result(st_mode=33206, st_ino=562949953558668, st_dev=3393479561, st_nlink=1, st_uid=0, st_gid=0, st_size=698179, st_atime=1648601046, st_mtime=1631589296, st_ctime=1631952752)</span></span><br><span class="line"></span><br><span class="line">mtime = saolei_apk.stat().st_mtime</span><br><span class="line"><span class="built_in">print</span>(arrow.get(mtime).<span class="built_in">format</span>(<span class="string">&#x27;YYYY-MM-DD HH:MM:SS&#x27;</span>))  </span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>st_mode</td>
<td>权限模式</td>
</tr>
<tr>
<td>st_ino</td>
<td>inode number</td>
</tr>
<tr>
<td>st_dev</td>
<td>device</td>
</tr>
<tr>
<td>st_nlink</td>
<td>硬链接数</td>
</tr>
<tr>
<td>st_uid</td>
<td>所属用户的user id</td>
</tr>
<tr>
<td>st_gid</td>
<td>所属用户的group id</td>
</tr>
<tr>
<td>st_size</td>
<td>文件的大小，以位为单位</td>
</tr>
<tr>
<td>st_atime</td>
<td>文件访问时间</td>
</tr>
<tr>
<td>st_mtime</td>
<td>文件修改时间</td>
</tr>
<tr>
<td>st_ctime</td>
<td>文件创建时间</td>
</tr>
</tbody></table>
<ul>
<li>注意3个时间都是时间戳，要获取好看的时间就用arrow（详见我的另外一篇博文<a href="https://ruru023.github.io/2022/03/31/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93arrow/">Python第三方库_arrow</a>）来获取。</li>
<li></li>
</ul>
<h2 id="文件-夹-操作"><a href="#文件-夹-操作" class="headerlink" title="文件(夹)操作"></a>文件(夹)操作</h2><ul>
<li><p>慎用！推荐用shutil</p>
</li>
<li><p>示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">newfile = Path(<span class="string">r&#x27;D:\20220402.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> newfile.exists():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;创建文件&#x27;</span>)</span><br><span class="line">    newfile.touch(exist_ok=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;删除文件&#x27;</span>)</span><br><span class="line">    newfile.unlink()</span><br></pre></td></tr></table></figure></li>
</ul>
<table>
<thead>
<tr>
<th>操作</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>exists()</td>
<td>是否存在</td>
</tr>
<tr>
<td>is_dir()</td>
<td>是否是文件</td>
</tr>
<tr>
<td>is_file()</td>
<td>是否是目录</td>
</tr>
<tr>
<td>touch(mode=0o666, exist_ok=True)</td>
<td>创建文件，默认权限666，如果exist_ok为True，文件存在不做任何事情，若为False，文件存在执行touch会报错<code>FileExistsError</code></td>
</tr>
<tr>
<td>unlink()</td>
<td>删除文件！危险操作！</td>
</tr>
<tr>
<td>rmdir()</td>
<td>删除目录非常危险，并且没有提示，一定要谨慎操作。一次只删除一级目录，且当前目录必须为空</td>
</tr>
<tr>
<td>mkdir()</td>
<td>创建目录</td>
</tr>
<tr>
<td>read_text()</td>
<td>读文件内容，不再需要重复去打开文件和管理文件的关闭了，下同</td>
</tr>
<tr>
<td>read_bytes()</td>
<td>读取bytes</td>
</tr>
<tr>
<td>write_text</td>
<td>写入文本，注意是w 模式，如果之前已经有文件内容，将会被覆盖</td>
</tr>
<tr>
<td>write_bytes</td>
<td>写入bytes</td>
</tr>
<tr>
<td>replace(文件新路径)</td>
<td>移动文件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li><p>重命名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">txt_path = Path(<span class="string">&#x27;archive/demo.txt&#x27;</span>)</span><br><span class="line">new_file = txt_path.with_name(<span class="string">&#x27;new.txt&#x27;</span>)</span><br><span class="line">txt_path.replace(new_file)</span><br></pre></td></tr></table></figure></li>
<li><p>改后缀</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">txt_path = Path(<span class="string">&#x27;archive/demo.txt&#x27;</span>)</span><br><span class="line">new_file = txt_path.with_suffix(<span class="string">&#x27;.json&#x27;</span>)</span><br><span class="line">txt_path.replace(new_file)</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="批量移动"><a href="#批量移动" class="headerlink" title="批量移动"></a>批量移动</h2><ul>
<li><p>现在有这个目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\test (6.5KB)</span><br><span class="line">+-- 1 (6.5KB)</span><br><span class="line">|   +-- 1.txt (0b)</span><br><span class="line">|   `-- 1.xls (6.5KB)</span><br><span class="line">`-- 2</span><br><span class="line">    `-- 2.txt (0b)</span><br></pre></td></tr></table></figure></li>
<li><p>移动所有子目录下的.txt文件到E:\test这个根目录下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">move_file_to</span>(<span class="params">srcdir,dstdir,file_pattern</span>):</span><br><span class="line">    file = Path(srcdir).rglob(file_pattern)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> file:</span><br><span class="line">        Path(_).replace(Path(dstdir) / Path(_).name)</span><br><span class="line"></span><br><span class="line">move_file_to(srcdir=<span class="string">r&#x27;e:\test&#x27;</span>,dstdir=<span class="string">r&#x27;e:\test&#x27;</span>,file_pattern=<span class="string">&#x27;*.txt&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="批量修改后缀"><a href="#批量修改后缀" class="headerlink" title="批量修改后缀"></a>批量修改后缀</h2><ul>
<li><p>还是上面的目录结构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">E:\test (<span class="number">6.5</span>KB)</span><br><span class="line">+-- <span class="number">1</span> (<span class="number">6.5</span>KB)</span><br><span class="line">|   +-- <span class="number">1.</span>txt (0b)</span><br><span class="line">|   `-- <span class="number">1.</span>xls (<span class="number">6.5</span>KB)</span><br><span class="line">`-- <span class="number">2</span></span><br><span class="line">    `-- <span class="number">2.</span>txt (0b)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_suffix</span>(<span class="params">dst_dir,old_suffix,new_suffix</span>):</span><br><span class="line">    file = Path(dst_dir).rglob(<span class="string">&#x27;*.&#x27;</span>+old_suffix)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">list</span>(file):</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> file:</span><br><span class="line">            new_ = Path(_).with_suffix(<span class="string">&#x27;.&#x27;</span>+new_suffix)</span><br><span class="line">            Path(_).replace(new_)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&#x27;file-type:<span class="subst">&#123;old_suffix&#125;</span> not found(recursive) in <span class="subst">&#123;dst_dir&#125;</span>&#x27;</span>)</span><br><span class="line">change_suffix(dst_dir=<span class="string">r&#x27;e:\test&#x27;</span>,old_suffix=<span class="string">&#x27;txt&#x27;</span>,new_suffix=<span class="string">&#x27;docx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>修改后</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ tree</span><br><span class="line">E:\test (<span class="number">6.5</span>KB)</span><br><span class="line">+-- <span class="number">1</span> (<span class="number">6.5</span>KB)</span><br><span class="line">|   +-- <span class="number">1.</span>docx (0b)</span><br><span class="line">|   `-- <span class="number">1.</span>xls (<span class="number">6.5</span>KB)</span><br><span class="line">`-- <span class="number">2</span></span><br><span class="line">    `-- <span class="number">2.</span>docx (0b)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>rglob是递归，glob只会找一个目录下</li>
<li>glob得到的是一个生成器，可以用list来转化成列表</li>
</ul>
</li>
</ul>
<h2 id="统计目录下的文件类型"><a href="#统计目录下的文件类型" class="headerlink" title="统计目录下的文件类型"></a>统计目录下的文件类型</h2><ul>
<li><p>还是刚才的目录结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\test (6.5KB)</span><br><span class="line">+-- 1 (6.5KB)</span><br><span class="line">|   +-- 1.txt (0b)</span><br><span class="line">|   `-- 1.xls (6.5KB)</span><br><span class="line">`-- 2</span><br><span class="line">    `-- 2.txt (0b)</span><br></pre></td></tr></table></figure></li>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">path = Path(<span class="string">r&#x27;e:\test\1&#x27;</span>)</span><br><span class="line">files = [f.suffix <span class="keyword">for</span> f <span class="keyword">in</span> path.iterdir() <span class="keyword">if</span> f.is_file()]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(collections.Counter(files)))  <span class="comment">#&#123;&#x27;.txt&#x27;: 1, &#x27;.xls&#x27;: 1&#125;</span></span><br></pre></td></tr></table></figure></li>
<li><p>但是上面的代码不能递归，就是当前目录下的文件的类型</p>
</li>
<li><p>改造一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">path = Path(<span class="string">r&#x27;e:\test&#x27;</span>)</span><br><span class="line">files = [f.suffix <span class="keyword">for</span> f <span class="keyword">in</span> path.rglob(<span class="string">&#x27;*.*&#x27;</span>) <span class="keyword">if</span> f.is_file()]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(collections.Counter(files)))</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="统计某个目录下最近修改的文件"><a href="#统计某个目录下最近修改的文件" class="headerlink" title="统计某个目录下最近修改的文件"></a>统计某个目录下最近修改的文件</h2><ul>
<li><p>转载知乎原文的代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">path = Path.cwd()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(</span><br><span class="line">    [(f.stat().st_mtime, f)</span><br><span class="line">     <span class="keyword">for</span> f <span class="keyword">in</span> path.iterdir()</span><br><span class="line">     <span class="keyword">if</span> f.is_file()]</span><br><span class="line">))</span><br></pre></td></tr></table></figure>

<ul>
<li>也不能递归，你知道怎么改吗？</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>完结</tag>
        <tag>python</tag>
        <tag>标准库</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman生成报告</title>
    <url>/2022/03/31/Postman%E7%94%9F%E6%88%90%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<h1 id="Postman生成报告"><a href="#Postman生成报告" class="headerlink" title="Postman生成报告"></a>Postman生成报告</h1><blockquote>
<p>POSTMAN的企业版是支持生成一个漂亮的报告的</p>
</blockquote>
<h2 id="newman安装"><a href="#newman安装" class="headerlink" title="newman安装"></a>newman安装</h2><ul>
<li><p>安装newman</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">npm install -g newman</span><br></pre></td></tr></table></figure></li>
<li><p>new报告插件安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">newman-reporter-html</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="POSTMAN中导出"><a href="#POSTMAN中导出" class="headerlink" title="POSTMAN中导出"></a>POSTMAN中导出</h2><ul>
<li><p>导出用例</p>
<p><img src="https://s2.loli.net/2022/03/31/4nt3yOgQGKlJBU1.png" alt="1648712267412.png"></p>
<p><img src="https://s2.loli.net/2022/03/31/JdifKSGBZg5WaRI.png" alt="1648712363265.png"></p>
</li>
<li><p>导出环境变量</p>
<p><img src="https://s2.loli.net/2022/03/31/4nt3yOgQGKlJBU1.png" alt="1648712267412.png"></p>
</li>
<li><p>这样会生成两个json文件</p>
<ul>
<li>教官系统.postman_collection.json</li>
<li>教官系统环境变量.postman_environment.json</li>
</ul>
</li>
</ul>
<h2 id="newman生成报告"><a href="#newman生成报告" class="headerlink" title="newman生成报告"></a>newman生成报告</h2><ul>
<li><p>newman其实是个命令行工具</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;newman -h</span><br><span class="line">Usage: newman [options] [command]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -v, --version               output the version number</span><br><span class="line">  -h, --<span class="built_in">help</span>                  display <span class="built_in">help</span> <span class="keyword">for</span> command</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  run [options] &lt;collection&gt;  Initiate a Postman Collection run <span class="keyword">from</span> a given URL <span class="keyword">or</span> path</span><br><span class="line"></span><br><span class="line">To get available options <span class="keyword">for</span> a command:</span><br><span class="line">  newman &lt;command&gt; -h</span><br></pre></td></tr></table></figure></li>
<li><p>可以看到关键是run命令，主要的参数和用法如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">newman run 用例.json -e 环境.json -r html  <span class="comment">#生成一个html报告</span></span><br><span class="line">newman run 用例.json -e 环境.json --bail newman  <span class="comment">#console打印</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>cmd示例,html的就不看了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">newman run 教官系统.postman_collection.json -e 教官系统环境变量.postman_environment.json --bail newman</span></span><br><span class="line">newman</span><br><span class="line"></span><br><span class="line">教官系统</span><br><span class="line"></span><br><span class="line">→ 登录</span><br><span class="line">  POST http://124.223.33.41:7081/api/mgr/loginReq ―[200 OK, 256B, 214ms]</span><br><span class="line">  1. Response time is less than 200ms</span><br><span class="line">  √  Status code name has string</span><br><span class="line">  √  Status code is 200</span><br><span class="line">  ┌</span><br><span class="line">  │ &#x27;&#123;&quot;retcode&quot;: 0&#125;&#x27;</span><br><span class="line">  │ [</span><br><span class="line">  │   &#123;</span><br><span class="line">  │     name: &#x27;sessionid&#x27;,</span><br><span class="line">  │     expires: null,</span><br><span class="line">  │     maxAge: 0,</span><br><span class="line">  │     domain: &#x27;124.223.33.41&#x27;,</span><br><span class="line">  │     path: &#x27;/&#x27;,</span><br><span class="line">  │     secure: false,</span><br><span class="line">  │     httpOnly: true,</span><br><span class="line">  │     hostOnly: true,</span><br><span class="line">  │     value: &#x27;5nhn3fuygio2bddi1vodi7nk79vnusdr&#x27;</span><br><span class="line">  │   &#125;</span><br><span class="line">  │ ]</span><br><span class="line">  └</span><br><span class="line"></span><br><span class="line">→ 添加课程</span><br><span class="line">  POST http://124.223.33.41:7081/api/mgr/sq_mgr/ [200 OK, 194B, 36ms]</span><br><span class="line">  √  Status code is 200</span><br><span class="line"></span><br><span class="line">→ 列出课程</span><br><span class="line">  GET http://124.223.33.41:7081/api/mgr/sq_mgr/?action=list_course&amp;pagenum=1&amp;pagesize=20 [200 OK, 546B, 20ms]</span><br><span class="line"></span><br><span class="line">→ 修改课程</span><br><span class="line">  PUT http://124.223.33.41:7081/api/mgr/sq_mgr/ [200 OK, 182B, 49ms]</span><br><span class="line"></span><br><span class="line">→ 删除课程</span><br><span class="line">  DELETE http://124.223.33.41:7081/api/mgr/sq_mgr/ [200 OK, 182B, 39ms]</span><br><span class="line"></span><br><span class="line">┌─────────────────────────┬───────────────────┬───────────────────┐</span><br><span class="line">│                         │          executed │            failed │</span><br><span class="line">├─────────────────────────┼───────────────────┼───────────────────┤</span><br><span class="line">│              iterations │                 1 │                 0 │</span><br><span class="line">├─────────────────────────┼───────────────────┼───────────────────┤</span><br><span class="line">│                requests │                 5 │                 0 │</span><br><span class="line">├─────────────────────────┼───────────────────┼───────────────────┤</span><br><span class="line">│            test-scripts │                 3 │                 0 │</span><br><span class="line">├─────────────────────────┼───────────────────┼───────────────────┤</span><br><span class="line">│      prerequest-scripts │                 1 │                 0 │</span><br><span class="line">├─────────────────────────┼───────────────────┼───────────────────┤</span><br><span class="line">│              assertions │                 4 │                 1 │</span><br><span class="line">├─────────────────────────┴───────────────────┴───────────────────┤</span><br><span class="line">│ total run duration: 793ms                                       │</span><br><span class="line">├─────────────────────────────────────────────────────────────────┤</span><br><span class="line">│ total data received: 445B (approx)                              │</span><br><span class="line">├─────────────────────────────────────────────────────────────────┤</span><br><span class="line">│ average response time: 71ms [min: 20ms, max: 214ms, s.d.: 71ms] │</span><br><span class="line">└─────────────────────────────────────────────────────────────────┘</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"> failure                detail</span></span><br><span class="line"></span><br><span class="line"> 1.  AssertionError         Response time is less than 200ms</span><br><span class="line">                            expected 214 to be below 200</span><br><span class="line">                            at assertion:0 in test-script</span><br><span class="line">                            inside &quot;登录&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="附录：run命令所有帮助"><a href="#附录：run命令所有帮助" class="headerlink" title="附录：run命令所有帮助"></a>附录：run命令所有帮助</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;newman run -h</span><br><span class="line">Usage: newman run &lt;collection&gt; [options]</span><br><span class="line"></span><br><span class="line">Initiate a Postman Collection run <span class="keyword">from</span> a given URL <span class="keyword">or</span> path</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -e, --environment &lt;path&gt;              Specify a URL <span class="keyword">or</span> path to a Postman Environment</span><br><span class="line">  -g, --<span class="built_in">globals</span> &lt;path&gt;                  Specify a URL <span class="keyword">or</span> path to a file containing Postman Globals</span><br><span class="line">  -r, --reporters [reporters]           Specify the reporters to use <span class="keyword">for</span> this run (default: [<span class="string">&quot;cli&quot;</span>])</span><br><span class="line">  -n, --iteration-count &lt;n&gt;             Define the number of iterations to run</span><br><span class="line">  -d, --iteration-data &lt;path&gt;           Specify a data file to use <span class="keyword">for</span> iterations (either JSON <span class="keyword">or</span> CSV)</span><br><span class="line">  --folder &lt;path&gt;                       Specify the folder to run <span class="keyword">from</span> a collection. Can be specified multiple times to</span><br><span class="line">                                        run multiple folders (default: [])</span><br><span class="line">  --<span class="keyword">global</span>-var &lt;value&gt;                  Allows the specification of <span class="keyword">global</span> variables via the command line, <span class="keyword">in</span> a</span><br><span class="line">                                        key=value <span class="built_in">format</span> (default: [])</span><br><span class="line">  --env-var &lt;value&gt;                     Allows the specification of environment variables via the command line, <span class="keyword">in</span> a</span><br><span class="line">                                        key=value <span class="built_in">format</span> (default: [])</span><br><span class="line">  --export-environment &lt;path&gt;           Exports the final environment to a file after completing the run</span><br><span class="line">  --export-<span class="built_in">globals</span> &lt;path&gt;               Exports the final <span class="built_in">globals</span> to a file after completing the run</span><br><span class="line">  --export-collection &lt;path&gt;            Exports the executed collection to a file after completing the run</span><br><span class="line">  --postman-api-key &lt;apiKey&gt;            API Key used to load the resources <span class="keyword">from</span> the Postman API</span><br><span class="line">  --bail [modifiers]                    Specify whether <span class="keyword">or</span> <span class="keyword">not</span> to gracefully stop a collection run on encountering an</span><br><span class="line">                                        error <span class="keyword">and</span> whether to end the run <span class="keyword">with</span> an error based on the optional modifier</span><br><span class="line">  --ignore-redirects                    Prevents Newman <span class="keyword">from</span> automatically following 3XX redirect responses</span><br><span class="line">  -x , --suppress-exit-code             Specify whether <span class="keyword">or</span> <span class="keyword">not</span> to override the default exit code <span class="keyword">for</span> the current run</span><br><span class="line">  --silent                              Prevents Newman <span class="keyword">from</span> showing output to CLI</span><br><span class="line">  --disable-unicode                     Forces Unicode compliant symbols to be replaced by their plain text equivalents</span><br><span class="line">  --color &lt;value&gt;                       Enable/Disable colored output (auto|on|off) (default: <span class="string">&quot;auto&quot;</span>)</span><br><span class="line">  --delay-request [n]                   Specify the extent of delay between requests (milliseconds) (default: <span class="number">0</span>)</span><br><span class="line">  --timeout [n]                         Specify a timeout <span class="keyword">for</span> collection run (milliseconds) (default: <span class="number">0</span>)</span><br><span class="line">  --timeout-request [n]                 Specify a timeout <span class="keyword">for</span> requests (milliseconds) (default: <span class="number">0</span>)</span><br><span class="line">  --timeout-script [n]                  Specify a timeout <span class="keyword">for</span> scripts (milliseconds) (default: <span class="number">0</span>)</span><br><span class="line">  --working-<span class="built_in">dir</span> &lt;path&gt;                  Specify the path to the working directory</span><br><span class="line">  --no-insecure-file-read               Prevents reading the files situated outside of the working directory</span><br><span class="line">  -k, --insecure                        Disables SSL validations</span><br><span class="line">  --ssl-client-cert-<span class="built_in">list</span> &lt;path&gt;         Specify the path to a client certificates configurations (JSON)</span><br><span class="line">  --ssl-client-cert &lt;path&gt;              Specify the path to a client certificate (PEM)</span><br><span class="line">  --ssl-client-key &lt;path&gt;               Specify the path to a client certificate private key</span><br><span class="line">  --ssl-client-passphrase &lt;passphrase&gt;  Specify the client certificate passphrase (<span class="keyword">for</span> protected key)</span><br><span class="line">  --ssl-extra-ca-certs &lt;path&gt;           Specify additionally trusted CA certificates (PEM)</span><br><span class="line">  --cookie-jar &lt;path&gt;                   Specify the path to a custom cookie jar (serialized tough-cookie JSON)</span><br><span class="line">  --export-cookie-jar &lt;path&gt;            Exports the cookie jar to a file after completing the run</span><br><span class="line">  --verbose                             Show detailed information of collection run <span class="keyword">and</span> each request sent</span><br><span class="line">  -h, --<span class="built_in">help</span>                            display <span class="built_in">help</span> <span class="keyword">for</span> command</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>postman</category>
      </categories>
      <tags>
        <tag>postman</tag>
        <tag>api</tag>
        <tag>完结</tag>
      </tags>
  </entry>
  <entry>
    <title>Python小程序_简单加密</title>
    <url>/2022/03/31/Python%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AE%80%E5%8D%95%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h1 id="Python之禅-THIS-PY"><a href="#Python之禅-THIS-PY" class="headerlink" title="Python之禅:THIS.PY"></a>Python之禅:THIS.PY</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;&quot;&quot;Gur Mra bs Clguba, ol Gvz Crgref&quot;&quot;&quot;</span>  <span class="comment">#编码后的字符串，我删除了很多信息</span></span><br><span class="line"></span><br><span class="line">d = &#123;&#125;  <span class="comment">#空字典</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> (<span class="number">65</span>, <span class="number">97</span>):  <span class="comment">#c就是2个值，65和97</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):  <span class="comment">#26个字母</span></span><br><span class="line">        d[<span class="built_in">chr</span>(i+c)] = <span class="built_in">chr</span>((i+<span class="number">13</span>) % <span class="number">26</span> + c)  <span class="comment">#建立字典对应关系</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join([d.get(c, c) <span class="keyword">for</span> c <span class="keyword">in</span> s]))  <span class="comment">#将新的字符串加密（rot13）得到一个新的字符串。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">The Zen of Python, by Tim Peters</span><br></pre></td></tr></table></figure>



<h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><ul>
<li><p>chr：返回指定数字的unicode字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chr</span>(i, /)</span><br><span class="line">    Return a Unicode string of one character <span class="keyword">with</span> ordinal i; <span class="number">0</span> &lt;= i &lt;= <span class="number">0x10ffff</span>.</span><br><span class="line">    </span><br><span class="line"><span class="built_in">chr</span>(<span class="number">65</span>)  是A  <span class="built_in">chr</span>(<span class="number">90</span>)是Z ,差<span class="number">25</span></span><br><span class="line"><span class="built_in">chr</span>(<span class="number">97</span>)  是a  <span class="built_in">chr</span>(<span class="number">122</span>)是z，差<span class="number">25</span>(<span class="number">26</span>个英文字母)</span><br></pre></td></tr></table></figure></li>
<li><p>chr(i+c)，i从0到25</p>
</li>
<li><p>两个for循环建立了一个字典</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d[<span class="built_in">chr</span>(i+c)] = <span class="built_in">chr</span>((i+<span class="number">13</span>) % <span class="number">26</span> + c)  <span class="comment">#超出26个字符要求余数+C，这是关键</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;A&#x27;</span>: <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;B&#x27;</span>: <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;E&#x27;</span>: <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;F&#x27;</span>: <span class="string">&#x27;S&#x27;</span>) <span class="comment">#省略了很多  A后第13个字符串后的N</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="代码改造成函数"><a href="#代码改造成函数" class="headerlink" title="代码改造成函数"></a>代码改造成函数</h1><ul>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rot_n</span>(<span class="params">s,n=<span class="number">13</span></span>):   <span class="comment">#接受一个字符串，通过将每个字符串往后挪13位（默认值，可以自行更改）</span></span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> (<span class="number">65</span>, <span class="number">97</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            d[<span class="built_in">chr</span>(i+c)] = <span class="built_in">chr</span>((i+n) % <span class="number">26</span> + c)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([d.get(c, c) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line">sen = <span class="string">&#x27;i love china&#x27;</span>  <span class="comment">#原始字符串</span></span><br><span class="line"><span class="built_in">print</span>(rot_n(sen,<span class="number">13</span>))   <span class="comment">#v ybir puvan  #加密后的字符串</span></span><br></pre></td></tr></table></figure></li>
<li><p>解码代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">de_rot_n</span>(<span class="params">s,n=<span class="number">13</span></span>):</span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> (<span class="number">65</span>, <span class="number">97</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            d[<span class="built_in">chr</span>(i+c)] = <span class="built_in">chr</span>((i-n) % <span class="number">26</span> + c)  <span class="comment">#返回来就是解密</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([d.get(c, c) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line">sen = <span class="string">&#x27;v ybir puvan&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(de_rot_n(sen,<span class="number">13</span>))  <span class="comment">#i love china</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>完结</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python第三方库_arrow</title>
    <url>/2022/03/31/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93arrow/</url>
    <content><![CDATA[<h1 id="Python第三方库arrow"><a href="#Python第三方库arrow" class="headerlink" title="Python第三方库arrow"></a>Python第三方库arrow</h1><blockquote>
<p><a href="https://pypi.org/project/arrow/">https://pypi.org/project/arrow/</a></p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul>
<li><strong>处理时间日期的一个第三方库</strong></li>
<li><strong>Arrow</strong> is a Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting <strong>dates, times and timestamps</strong>. It implements and updates the datetime type, plugging gaps in functionality and providing an intelligent module API that supports many common creation scenarios. Simply put, it helps you work with dates and times with fewer imports and a lot less code.</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>Too many modules: datetime, time, calendar, dateutil, pytz and more</li>
<li>Too many types: date, time, datetime, tzinfo, timedelta, relativedelta, etc.</li>
<li>Timezones and timestamp conversions are verbose and unpleasant</li>
<li>Timezone naivety is the norm</li>
<li>Gaps in functionality: ISO 8601 parsing, timespans, humanization</li>
</ul>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>Fully-implemented, drop-in replacement for datetime</li>
<li>Support for Python 3.6+</li>
<li>Timezone-aware and UTC by default</li>
<li>Super-simple creation options for many common input scenarios</li>
<li><code>shift</code> method with support for relative offsets, including weeks</li>
<li>Format and parse strings automatically</li>
<li>Wide support for the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> standard</li>
<li>Timezone conversion</li>
<li>Support for <code>dateutil</code>, <code>pytz</code>, and <code>ZoneInfo</code> tzinfo objects</li>
<li>Generates time spans, ranges, floors and ceilings for time frames ranging from microsecond to year</li>
<li>Humanize dates and times with a growing list of contributed locales</li>
<li>Extensible for your own Arrow-derived types</li>
<li>Full support for PEP 484-style type hints</li>
</ul>
<h1 id="官方示例"><a href="#官方示例" class="headerlink" title="官方示例"></a>官方示例</h1><blockquote>
<p>稍作补充</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> arrow</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arrow.get(<span class="string">&#x27;2013-05-11T21:23:58.970460+07:00&#x27;</span>)</span><br><span class="line">&lt;Arrow [<span class="number">2013</span>-05-11T21:<span class="number">23</span>:<span class="number">58.970460</span>+07:<span class="number">00</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>utc = arrow.utcnow()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>utc</span><br><span class="line">&lt;Arrow [<span class="number">2013</span>-05-11T21:<span class="number">23</span>:<span class="number">58.970460</span>+<span class="number">00</span>:<span class="number">00</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = arrow.now()  <span class="comment">#当前时间</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">&lt;Arrow [<span class="number">2022</span>-03-31T11:06:<span class="number">21.477106</span>+08:<span class="number">00</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>utc = utc.shift(hours=-<span class="number">1</span>)  <span class="comment">#偏移，前面1个小时</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>utc</span><br><span class="line">&lt;Arrow [<span class="number">2013</span>-05-11T20:<span class="number">23</span>:<span class="number">58.970460</span>+<span class="number">00</span>:<span class="number">00</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local = utc.to(<span class="string">&#x27;US/Pacific&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local</span><br><span class="line">&lt;Arrow [<span class="number">2013</span>-05-11T13:<span class="number">23</span>:<span class="number">58.970460</span>-07:<span class="number">00</span>]&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local.timestamp()</span><br><span class="line"><span class="number">1368303838.970460</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local.<span class="built_in">format</span>()   <span class="comment">#时间格式化</span></span><br><span class="line"><span class="string">&#x27;2013-05-11 13:23:58 -07:00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local.<span class="built_in">format</span>(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss ZZ&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;2013-05-11 13:23:58 -07:00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local.humanize()  <span class="comment">#人性化输出</span></span><br><span class="line"><span class="string">&#x27;an hour ago&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>local.humanize(locale=<span class="string">&#x27;ko-kr&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;한시간 전&#x27;</span></span><br></pre></td></tr></table></figure>



<h1 id="引申"><a href="#引申" class="headerlink" title="引申"></a>引申</h1><h2 id="关于时间偏移shift"><a href="#关于时间偏移shift" class="headerlink" title="关于时间偏移shift"></a>关于时间偏移shift</h2><ul>
<li><p>源码部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shift</span>(<span class="params">self, **kwargs: <span class="type">Any</span></span>) -&gt; <span class="string">&quot;Arrow&quot;</span>:</span><br><span class="line">    relative_kwargs = &#123;&#125;</span><br><span class="line">    additional_attrs = [<span class="string">&quot;weeks&quot;</span>, <span class="string">&quot;quarters&quot;</span>, <span class="string">&quot;weekday&quot;</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> kwargs.items():</span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self._ATTRS_PLURAL <span class="keyword">or</span> key <span class="keyword">in</span> additional_attrs:</span><br><span class="line">            relative_kwargs[key] = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            supported_attr = <span class="string">&quot;, &quot;</span>.join(self._ATTRS_PLURAL + additional_attrs)</span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">f&quot;Invalid shift time frame. Please select one of the following: <span class="subst">&#123;supported_attr&#125;</span>.&quot;</span></span><br><span class="line">            )</span><br><span class="line">_ATTRS: Final[<span class="type">List</span>[<span class="built_in">str</span>]] = [</span><br><span class="line">    <span class="string">&quot;year&quot;</span>,</span><br><span class="line">    <span class="string">&quot;month&quot;</span>,</span><br><span class="line">    <span class="string">&quot;day&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hour&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minute&quot;</span>,</span><br><span class="line">    <span class="string">&quot;second&quot;</span>,</span><br><span class="line">    <span class="string">&quot;microsecond&quot;</span>,</span><br><span class="line">]</span><br><span class="line">_ATTRS_PLURAL: Final[<span class="type">List</span>[<span class="built_in">str</span>]] = [<span class="string">f&quot;<span class="subst">&#123;a&#125;</span>s&quot;</span> <span class="keyword">for</span> a <span class="keyword">in</span> _ATTRS]</span><br><span class="line">    additional_attrs = [<span class="string">&quot;weeks&quot;</span>, <span class="string">&quot;quarters&quot;</span>, <span class="string">&quot;weekday&quot;</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li><p>测试代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">now = arrow.now() </span><br><span class="line">now.shift(fenzhong=<span class="number">1</span>)  <span class="comment">#这是不支持的，支持的如下提示</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ValueError: Invalid shift time frame. Please select one of the following: years, months, days, hours, minutes, seconds, microseconds, weeks, quarters, weekday.</span><br></pre></td></tr></table></figure></li>
<li><p>示例代码：对shift的weeks和weekday的说明，其他的几个参数都比较简单</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">now = arrow.now()</span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;YYYY-MM-DD&#x27;</span>))  <span class="comment">#当前时间  2022-03-31</span></span><br><span class="line"><span class="built_in">print</span>(now.shift(weeks=<span class="number">1</span>))    <span class="comment">#1周后      #2022-04-07T11:22:56.715460+08:00</span></span><br><span class="line"><span class="built_in">print</span>(now.shift(weekday=<span class="number">1</span>))  <span class="comment">#最近的周二  #2022-04-05T11:22:56.715460+08:00</span></span><br></pre></td></tr></table></figure>

<ul>
<li>weekday的取值范围是0~6,<strong>0代表周1,6代表周日</strong>，依次类推。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="关于时间格式化format"><a href="#关于时间格式化format" class="headerlink" title="关于时间格式化format"></a>关于时间格式化format</h2><ul>
<li><p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_format_token</span>(<span class="params">self, dt: datetime, token: <span class="type">Optional</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">Optional</span>[<span class="built_in">str</span>]:</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">and</span> token.startswith(<span class="string">&quot;[&quot;</span>) <span class="keyword">and</span> token.endswith(<span class="string">&quot;]&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> token[<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;YYYY&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.year_full(dt.year)</span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;YY&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.year_abbreviation(dt.year)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;MMMM&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.month_name(dt.month)</span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;MMM&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.month_abbreviation(dt.month)</span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;MM&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.month:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;M&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.month&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;DDDD&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.timetuple().tm_yday:03d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;DDD&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.timetuple().tm_yday&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;DD&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.day:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;D&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.day&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;Do&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.ordinal_number(dt.day)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;dddd&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.day_name(dt.isoweekday())</span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;ddd&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> self.locale.day_abbreviation(dt.isoweekday())</span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;d&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.isoweekday()&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;HH&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.hour:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;H&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.hour&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;hh&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.hour <span class="keyword">if</span> <span class="number">0</span> &lt; dt.hour &lt; <span class="number">13</span> <span class="keyword">else</span> <span class="built_in">abs</span>(dt.hour - <span class="number">12</span>):02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;h&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.hour <span class="keyword">if</span> <span class="number">0</span> &lt; dt.hour &lt; <span class="number">13</span> <span class="keyword">else</span> <span class="built_in">abs</span>(dt.hour - <span class="number">12</span>)&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;mm&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.minute:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;m&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.minute&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;ss&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.second:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;s&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.second&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;SSSSSS&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond:06d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;SSSSS&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond // <span class="number">10</span>:05d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;SSSS&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond // <span class="number">100</span>:04d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;SSS&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond // <span class="number">1000</span>:03d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;SS&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond // <span class="number">10000</span>:02d&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;S&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.microsecond // <span class="number">100000</span>&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;X&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.timestamp()&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;x&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;dt.timestamp() * <span class="number">1_000_000</span>:<span class="number">.0</span>f&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;ZZZ&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> dt.tzname()</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">in</span> [<span class="string">&quot;ZZ&quot;</span>, <span class="string">&quot;Z&quot;</span>]:</span><br><span class="line">        separator = <span class="string">&quot;:&quot;</span> <span class="keyword">if</span> token == <span class="string">&quot;ZZ&quot;</span> <span class="keyword">else</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        tz = dateutil_tz.tzutc() <span class="keyword">if</span> dt.tzinfo <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> dt.tzinfo</span><br><span class="line">        <span class="comment"># `dt` must be aware object. Otherwise, this line will raise AttributeError</span></span><br><span class="line">        <span class="comment"># https://github.com/arrow-py/arrow/pull/883#discussion_r529866834</span></span><br><span class="line">        <span class="comment"># datetime awareness: https://docs.python.org/3/library/datetime.html#aware-and-naive-objects</span></span><br><span class="line">        total_minutes = <span class="built_in">int</span>(cast(timedelta, tz.utcoffset(dt)).total_seconds() / <span class="number">60</span>)</span><br><span class="line">  </span><br><span class="line">        sign = <span class="string">&quot;+&quot;</span> <span class="keyword">if</span> total_minutes &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="string">&quot;-&quot;</span></span><br><span class="line">        total_minutes = <span class="built_in">abs</span>(total_minutes)</span><br><span class="line">        hour, minute = <span class="built_in">divmod</span>(total_minutes, <span class="number">60</span>)</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;sign&#125;</span><span class="subst">&#123;hour:02d&#125;</span><span class="subst">&#123;separator&#125;</span><span class="subst">&#123;minute:02d&#125;</span>&quot;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">in</span> (<span class="string">&quot;a&quot;</span>, <span class="string">&quot;A&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> self.locale.meridian(dt.hour, token)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> token == <span class="string">&quot;W&quot;</span>:</span><br><span class="line">        year, week, day = dt.isocalendar()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;year&#125;</span>-W<span class="subst">&#123;week:02d&#125;</span>-<span class="subst">&#123;day&#125;</span>&quot;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<ul>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">now = arrow.now()</span><br><span class="line"><span class="built_in">print</span>(now)  <span class="comment">#2022-03-31T11:47:45.684950+08:00</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;YYYY&#x27;</span>)) <span class="comment">#四位的年  2022</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;YY&#x27;</span>))   <span class="comment">#两位的年  22</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;MMMM&#x27;</span>))  <span class="comment">#月份英文全拼   March</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;MMM&#x27;</span>)) <span class="comment">#月份简写 Mar</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;MM&#x27;</span>)) <span class="comment">#03</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;M&#x27;</span>))  <span class="comment">#3</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;DDDD&#x27;</span>))  <span class="comment">#090  这是啥?</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;DDD&#x27;</span>)) <span class="comment">#90</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;DD&#x27;</span>)) <span class="comment">#31 </span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;D&#x27;</span>)) <span class="comment">#31 </span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;dddd&#x27;</span>)) <span class="comment">#Thursday</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;ddd&#x27;</span>)) <span class="comment">#Thu</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;HH&#x27;</span>)) <span class="comment">#11</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;H&#x27;</span>)) <span class="comment">#11</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;hh&#x27;</span>)) <span class="comment">#11</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;h&#x27;</span>)) <span class="comment">#11</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;mm&#x27;</span>)) <span class="comment">#47</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;m&#x27;</span>)) <span class="comment">#47</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;ss&#x27;</span>)) <span class="comment">#45</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;s&#x27;</span>)) <span class="comment">#45</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;SSSSSS&#x27;</span>)) <span class="comment">#684950</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;SSSSS&#x27;</span>)) <span class="comment">#68495</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;SSSS&#x27;</span>)) <span class="comment">#6849</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;SSS&#x27;</span>)) <span class="comment">#684</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;SS&#x27;</span>)) <span class="comment">#68</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;S&#x27;</span>))  <span class="comment">#6</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;X&#x27;</span>)) <span class="comment">#1648698465.68495</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;x&#x27;</span>)) <span class="comment">#1648698465684950</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;ZZZ&#x27;</span>)) <span class="comment">#中国标准时间</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;ZZ&#x27;</span>)) <span class="comment">#+08:00</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;Z&#x27;</span>)) <span class="comment">#+0800</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>)) <span class="comment">#am</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;A&#x27;</span>)) <span class="comment">#AM</span></span><br><span class="line"><span class="built_in">print</span>(now.<span class="built_in">format</span>(<span class="string">&#x27;W&#x27;</span>)) <span class="comment">#2022-W13-4</span></span><br></pre></td></tr></table></figure></li>
<li><p>补充</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(now.weekday())  <span class="comment">#输出当前周几</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="关于人性化humanize"><a href="#关于人性化humanize" class="headerlink" title="关于人性化humanize"></a>关于人性化humanize</h2><ul>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">now = arrow.now()</span><br><span class="line">past = now.shift(hours=-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(past.humanize()) <span class="comment">#an hour ago</span></span><br><span class="line">furture = now.shift(hours=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(furture.humanize())  <span class="comment">#in an hour</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="其他操作（属性、时间戳、替换）"><a href="#其他操作（属性、时间戳、替换）" class="headerlink" title="其他操作（属性、时间戳、替换）"></a>其他操作（属性、时间戳、替换）</h2><ul>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">now = arrow.now() </span><br><span class="line"><span class="built_in">print</span>(now)  <span class="comment">#2022-03-31T13:40:13.711922+08:00</span></span><br><span class="line"><span class="built_in">print</span>(now.year) </span><br><span class="line"><span class="built_in">print</span>(now.month)</span><br><span class="line"><span class="built_in">print</span>(now.day)</span><br><span class="line"><span class="built_in">print</span>(now.hour)</span><br><span class="line"><span class="built_in">print</span>(now.minute)</span><br><span class="line"><span class="built_in">print</span>(now.second)</span><br><span class="line"><span class="built_in">print</span>(now.microsecond)</span><br><span class="line"><span class="built_in">print</span>(now.timestamp()) <span class="comment">#1648705213.711922</span></span><br><span class="line"><span class="built_in">print</span>(now.int_timestamp) <span class="comment">#时间戳的整数部分 1648705213</span></span><br></pre></td></tr></table></figure></li>
<li><p>对于时间戳，可以通过get反过来获取时间</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">time1 = arrow.get(<span class="number">1648705213</span>)  <span class="comment">#注意不能使用引号</span></span><br><span class="line"><span class="built_in">print</span>(time1.year)</span><br></pre></td></tr></table></figure></li>
<li><p>计算毫秒的一个示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">t1 = arrow.now().timestamp()</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">t2 = arrow.now().timestamp()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="built_in">round</span>(t2-t1,<span class="number">3</span>))*<span class="number">1000</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>替换时间</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line">t1 = arrow.now()</span><br><span class="line"><span class="built_in">print</span>(t1)</span><br><span class="line">t2 = t1.replace(year=<span class="number">2018</span>)  <span class="comment">#替换个年份</span></span><br><span class="line"><span class="built_in">print</span>(t2)</span><br><span class="line">t3 = t1.replace(month=<span class="number">11</span>,day=<span class="number">14</span>) <span class="comment">#替换月和日</span></span><br><span class="line"><span class="built_in">print</span>(t3)</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>完结</tag>
        <tag>python</tag>
        <tag>第三方库</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo技巧</title>
    <url>/2022/03/31/hexo/</url>
    <content><![CDATA[<h1 id="hexo技巧"><a href="#hexo技巧" class="headerlink" title="hexo技巧"></a>hexo技巧</h1><blockquote>
<p>当前博客是用hexo+ayer主题结合github搭建而成</p>
</blockquote>
<h1 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h1><p><strong>步骤一：添加分类</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<ul>
<li><p>输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">songqin008@DESKTOP-6PNR7SB MINGW64 /e/github/myblog/hexo</span><br><span class="line">$ hexo new page categories</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: E:\github\myblog\hexo\source\categories\index.md</span><br></pre></td></tr></table></figure></li>
<li><p>index.md的内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2022-03-30 13:46:23</span><br><span class="line">type: categories   #网上都说是这句话，但有点奇怪的，感觉不太对。</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>步骤二：在文章中增加对应信息</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: hexo技巧</span><br><span class="line">date: </span><br><span class="line">categories: </span><br><span class="line">- hexo</span><br></pre></td></tr></table></figure>

<ul>
<li>效果是有的，但在分类标签中看不到</li>
</ul>
<h1 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h1><p><strong>步骤一：添加标签</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<ul>
<li>输出</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">songqin008@DESKTOP-6PNR7SB MINGW64 /e/github/myblog/hexo</span><br><span class="line">$ hexo new page tags</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: E:\github\myblog\hexo\source\tags\index.md</span><br></pre></td></tr></table></figure>

<ul>
<li><p>index.md的内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2022-03-30 13:55:59</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>步骤二：在文章中增加对应信息</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: hexo技巧</span><br><span class="line">date: </span><br><span class="line">tags: </span><br><span class="line">- hexo</span><br></pre></td></tr></table></figure>

<ul>
<li>效果是有的，但在标签中看不到</li>
</ul>
<h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><ul>
<li><p>执行2个命令</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></li>
<li><p>在文件头部信息加入top: True</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">title: hexo技巧</span><br><span class="line">date: </span><br><span class="line">categories: </span><br><span class="line">- hexo</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">top: <span class="literal">True</span>   <span class="comment">#关键是这个</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h1><ul>
<li>本地的显然不行，上传到images目录下也没通过；</li>
<li>找免费图床，推荐SM.MS</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>待续</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman测试脚本</title>
    <url>/2022/03/30/Postman%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="Postman测试脚本"><a href="#Postman测试脚本" class="headerlink" title="Postman测试脚本"></a>Postman测试脚本</h1><blockquote>
<p><a href="https://learning.postman.com/docs/writing-scripts/script-references/test-examples/">https://learning.postman.com/docs/writing-scripts/script-references/test-examples/</a></p>
</blockquote>
<h1 id="SNIPPETS"><a href="#SNIPPETS" class="headerlink" title="SNIPPETS"></a>SNIPPETS</h1><blockquote>
<p>POSTMAN界面提供的</p>
</blockquote>
<h2 id="响应体包含字符串"><a href="#响应体包含字符串" class="headerlink" title="响应体包含字符串"></a>响应体包含字符串</h2><blockquote>
<p><em>{<strong>retcode: 0</strong>} 这是响应体</em></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Body matches string&quot;</span>, function () &#123;</span><br><span class="line">    pm.expect(pm.response.text()).to.include(<span class="string">&quot;retcode&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="响应体JSON数据"><a href="#响应体JSON数据" class="headerlink" title="响应体JSON数据"></a>响应体JSON数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Your test name&quot;</span>, function () &#123;</span><br><span class="line">    var jsonData = pm.response.json();</span><br><span class="line">    pm.expect(jsonData.retcode).to.eql(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="响应体数据"><a href="#响应体数据" class="headerlink" title="响应体数据"></a>响应体数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Body is correct&quot;</span>, function () &#123;</span><br><span class="line">    pm.response.to.have.body(&#123;retcode: <span class="number">0</span>&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="响应头数据"><a href="#响应头数据" class="headerlink" title="响应头数据"></a>响应头数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Content-Type is present&quot;</span>, function () &#123;</span><br><span class="line">    pm.response.to.have.header(<span class="string">&quot;Content-Type&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Response time is less than 200ms&quot;</span>, function () &#123;</span><br><span class="line">    pm.expect(pm.response.responseTime).to.be.below(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="响应码"><a href="#响应码" class="headerlink" title="响应码"></a>响应码</h2><ul>
<li><p>方式一</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Successful POST request&quot;</span>, function () &#123;</span><br><span class="line">    pm.expect(pm.response.code).to.be.oneOf([<span class="number">200</span>, <span class="number">201</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
<li><p>方式二</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Status code is 200&quot;</span>, function () &#123;</span><br><span class="line">  pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="响应码字符串"><a href="#响应码字符串" class="headerlink" title="响应码字符串"></a>响应码字符串</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm.test(<span class="string">&quot;Status code name has string&quot;</span>, function () &#123;</span><br><span class="line">    pm.response.to.have.status(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h2 id="语法总结"><a href="#语法总结" class="headerlink" title="语法总结"></a>语法总结</h2><ul>
<li><p>语法1</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(参数<span class="number">1</span>,函数)</span><br><span class="line">	参数<span class="number">1</span>: 函数执行成功后输出的字符串</span><br><span class="line">    函数: <span class="keyword">function</span>(<span class="params"></span>) &#123; 函数体&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>语法2</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#下面要结合pm.<span class="property">expect</span></span><br><span class="line">pm.<span class="property">response</span>.<span class="title function_">text</span>()</span><br><span class="line">pm.<span class="property">response</span>.<span class="title function_">json</span>()</span><br><span class="line">pm.<span class="property">response</span>.<span class="property">code</span></span><br><span class="line">pm.<span class="property">response</span>.<span class="property">responseTime</span></span><br><span class="line">#下面可以直接断言</span><br><span class="line">pm.<span class="property">response</span>.<span class="property">to</span>.<span class="property">have</span>.<span class="property">body</span></span><br><span class="line">pm.<span class="property">response</span>.<span class="property">to</span>.<span class="property">have</span>.<span class="property">header</span></span><br><span class="line">pm.<span class="property">response</span>.<span class="property">to</span>.<span class="property">have</span>.<span class="property">status</span></span><br></pre></td></tr></table></figure></li>
<li><p>语法3</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">expect</span>(要断言的内容).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">oneOf</span>(列表中存储多个值)</span><br><span class="line">pm.<span class="title function_">expect</span>(要断言的内容).<span class="property">to</span>.<span class="title function_">include</span>(字符串)</span><br><span class="line">pm.<span class="title function_">expect</span>(要断言的内容).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">below</span>(比较数值)</span><br><span class="line">pm.<span class="title function_">expect</span>(要断言的内容).<span class="property">to</span>.<span class="title function_">eql</span>()</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>postman</category>
      </categories>
      <tags>
        <tag>待续</tag>
        <tag>postman</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>Github仓库整理</title>
    <url>/2022/03/30/Github%E4%BB%93%E5%BA%93%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="Github仓库整理"><a href="#Github仓库整理" class="headerlink" title="Github仓库整理"></a>Github仓库整理</h1><blockquote>
<p>采集于 hellogithub，也有自己发现的，二道贩子</p>
<p>有些内容我就不举例了，大家可以看readme.md</p>
</blockquote>
<h1 id="python相关"><a href="#python相关" class="headerlink" title="python相关"></a>python相关</h1><h1 id="杂类"><a href="#杂类" class="headerlink" title="杂类"></a>杂类</h1><h2 id="hashcat"><a href="#hashcat" class="headerlink" title="hashcat"></a>hashcat</h2><ul>
<li><p>地址：<a href="https://github.com/hashcat/hashcat">https://github.com/hashcat/hashcat</a></p>
</li>
<li><p>简介：破解密码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hashcat <span class="keyword">is</span> the world<span class="string">&#x27;s fastest and most advanced password recovery utility, supporting five unique modes of attack for over 300 highly-optimized hashing algorithms. hashcat currently supports CPUs, GPUs, and other hardware accelerators on Linux, Windows, and macOS, and has facilities to help enable distributed password cracking</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="reveal-js"><a href="#reveal-js" class="headerlink" title="reveal.js"></a>reveal.js</h2><ul>
<li><p>地址：<a href="https://github.com/hakimel/reveal.js">https://github.com/hakimel/reveal.js</a></p>
</li>
<li><p>简介：HTML演示框架</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">reveal.js <span class="keyword">is</span> an <span class="built_in">open</span> source HTML presentation framework. It enables anyone <span class="keyword">with</span> a web browser to create beautiful presentations <span class="keyword">for</span> free. Check out the live demo at revealjs.com</span><br></pre></td></tr></table></figure></li>
<li><p>备注：我一直在用哈</p>
</li>
</ul>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>待续</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记_python源码剖析</title>
    <url>/2022/03/30/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-python%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</url>
    <content><![CDATA[<h1 id="读书笔记-python源码剖析"><a href="#读书笔记-python源码剖析" class="headerlink" title="读书笔记_python源码剖析"></a>读书笔记_python源码剖析</h1>]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>待续</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
